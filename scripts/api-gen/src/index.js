/*
 * WRI Restoration Marketplace API
 * ### About  This API serves the web and mobile apps for WRI's Restoration Marketplace (AKA TerraMatch).  ### Authentication & Authorisation  JWTs are used for authentication. Upon successful log in a JWT will be provided for you. These expire after 12 hours.  A padlock icon next to an endpoint indicates that it requires an authenticated user. For example:  ![](/images/padlock.png)  ### Requests & Responses  The response bodies documented here will be wrapped in an object adhering to the JSON:API specification.  ### Error Codes  Any errors returned in the body of a response will have a unique code to help identify the type of error. They are:  ``` ACCEPTED, ACTIVE_URL, AFTER, AFTER_OR_EQUAL, ALPHA, ALPHA_DASH, ALPHA_NUM, ARRAY, BEFORE, BEFORE_OR_EQUAL, BETWEEN, BOOLEAN, CARBON_CERTIFICATION_TYPE, CONFIRMED, CONTAIN_LOWER, CONTAIN_NUMBER, CONTAIN_UPPER, CONTINENT, COUNTRY_CODE, CUSTOM, DATE, DATE_EQUALS, DATE_FORMAT, DIFFERENT, DIGITS, DIGITS_BETWEEN, DIMENSIONS, DISTINCT, DOCUMENT_TYPE, EMAIL, ENDS_WITH, EXISTS, FILE, FILLED, FUNDING_BRACKET, FUNDING_SOURCE, GT, GTE, IMAGE, IN, IN_ARRAY, INTEGER, IP, IPV4, IPV6, JSON, LAND_OWNERSHIP, LAND_SIZE, LAND_TYPE, LT, LTE, MAX, MIMES, MIMETYPES, MIN, NOT_IN, NOT_PRESENT, NOT_REGEX, NUMERIC, OTHER_VALUE_PRESENT, OTHER_VALUE_NULL, OTHER_VALUE_STRING, ORGANISATION_CATEGORY, ORGANISATION_TYPE, PRESENT, REGEX, REJECTED_REASON, REPORTING_FREQUENCY, REPORTING_LEVEL, REQUIRED, REQUIRED_IF, REQUIRED_UNLESS, REQUIRED_WITH, REQUIRED_WITH_ALL, REQUIRED_WITHOUT, REQUIRED_WITHOUT_ALL, RESTORATION_GOAL, RESTORATION_METHOD, REVENUE_DRIVER, SAME, SIZE, SOFT_URL, STARTS_WITH, STARTS_WITH_FACEBOOK, STARTS_WITH_TWITTER, STARTS_WITH_INSTAGRAM, STARTS_WITH_LINKEDIN, STRICT_FLOAT, STRING, SUSTAINABLE_DEVELOPMENT_GOAL, TIMEZONE, TREE_SPECIES_OWNER, UNIQUE, UPLOADED, URL, UUID, VISIBILITY ```  ### Uploads  Uploads should first be uploaded to the `/uploads` endpoint. Upon success an ID will be returned, this ID is valid for 1 day. Use this ID in your request body to bind the upload to a property.  ### Elevator Videos  Elevator videos can be created by using the `/elevator_videos` endpoint. After creating an elevator video you will be returned an elevator video ID. Use this to check its status. Elevator videos will start off as `processing` and change to `finished` when it has been build. Once the elevator video is built the `upload_id` property will be present, you can use this just like a regular upload and attach it to a pitch's `video` property. Be sure to use the elevator video's `upload_id` property and not its `id` property. An elevator video's status may end up as `errored` or `timed_out` in which case something has gone wrong.  ### Entity Relationship Diagram  ![](/images/erd.png)  ### Units  * All prices are measured in USD * All land is measured in hectares * All time is measured in months  ### Drafts  When creating a draft the `data` property be equal to a string of JSON containing an empty object. You can then manipulate the `data` property with subsequent updates. When updating a draft you will need to use [JSON Patch](http://jsonpatch.com/) requests to manipulate the `data` property. Operations are relative to the `data` property which means you don't need to preface paths with `/data`. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.11-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['./ApiClient', './model/AdminAccept', './model/AdminInvite', './model/AdminRead', './model/AdminReadAll', './model/AdminUpdate', './model/AuthChange', './model/AuthLogIn', './model/AuthReset', './model/AuthVerify', './model/CarbonCertificationCreate', './model/CarbonCertificationRead', './model/CarbonCertificationReadAll', './model/CarbonCertificationTypeReadAll', './model/CarbonCertificationTypeReadAllInner', './model/CarbonCertificationUpdate', './model/CarbonCertificationVersionRead', './model/CarbonCertificationVersionReadAll', './model/CarbonCertificationVersionReject', './model/CompatibilityScoreCreate', './model/ContinentReadAll', './model/ContinentReadAllInner', './model/CountryReadAll', './model/CountryReadAllInner', './model/DeviceCreate', './model/DeviceRead', './model/DeviceReadAll', './model/DeviceUpdate', './model/DocumentTypeReadAll', './model/DraftCreate', './model/DraftDataRead', './model/DraftDataReadCarbonCertifications', './model/DraftDataReadOffer', './model/DraftDataReadOfferContacts', './model/DraftDataReadOfferDocuments', './model/DraftDataReadPitch', './model/DraftDataReadRestorationMethodMetrics', './model/DraftDataReadTreeSpecies', './model/DraftRead', './model/DraftReadAll', './model/DraftUpdate', './model/DraftUpdateInner', './model/ElevatorVideoCreate', './model/ElevatorVideoRead', './model/Empty', './model/FilterCondition', './model/FilterSearch', './model/FundingBracketReadAll', './model/FundingBracketReadAllInner', './model/FundingSourceReadAll', './model/FundingSourceReadAllInner', './model/InlineResponse200', './model/InlineResponse201', './model/InterestCreate', './model/InterestRead', './model/InterestReadAll', './model/LandOwnershipReadAll', './model/LandOwnershipReadAllInner', './model/LandSizeReadAll', './model/LandSizeReadAllInner', './model/LandTypeReadAll', './model/MaskedOrganisationRead', './model/MaskedTeamMemberRead', './model/MaskedTeamMemberReadAll', './model/MaskedUserRead', './model/MaskedUserReadAll', './model/MatchOfferContactRead', './model/MatchPitchContactRead', './model/MatchRead', './model/MatchReadAll', './model/NotificationRead', './model/NotificationReadAll', './model/OfferComplete', './model/OfferContactCreate', './model/OfferContactRead', './model/OfferContactReadAll', './model/OfferCreate', './model/OfferDocumentCreate', './model/OfferDocumentRead', './model/OfferDocumentReadAll', './model/OfferDocumentUpdate', './model/OfferRead', './model/OfferReadAll', './model/OfferUpdate', './model/OfferVisibility', './model/OrganisationCategoryReadAll', './model/OrganisationCategoryReadAllInner', './model/OrganisationCreate', './model/OrganisationDocumentCreate', './model/OrganisationDocumentRead', './model/OrganisationDocumentReadAll', './model/OrganisationDocumentUpdate', './model/OrganisationDocumentVersionRead', './model/OrganisationDocumentVersionReadAll', './model/OrganisationDocumentVersionReject', './model/OrganisationRead', './model/OrganisationReadAll', './model/OrganisationTypeReadAll', './model/OrganisationUpdate', './model/OrganisationVersionRead', './model/OrganisationVersionReadAll', './model/OrganisationVersionReject', './model/PitchByContinentReadAll', './model/PitchByContinentReadAllInner', './model/PitchComplete', './model/PitchContactCreate', './model/PitchContactRead', './model/PitchContactReadAll', './model/PitchCreate', './model/PitchDocumentCreate', './model/PitchDocumentRead', './model/PitchDocumentReadAll', './model/PitchDocumentUpdate', './model/PitchDocumentVersionRead', './model/PitchDocumentVersionReadAll', './model/PitchDocumentVersionReject', './model/PitchRead', './model/PitchReadAll', './model/PitchUpdate', './model/PitchVersionRead', './model/PitchVersionReadAll', './model/PitchVersionReject', './model/PitchVisibility', './model/RejectedReasonReadAll', './model/RejectedReasonReadAllInner', './model/ReportingFrequencyReadAll', './model/ReportingFrequencyReadAllInner', './model/ReportingLevelReadAll', './model/ReportingLevelReadAllInner', './model/RestorationGoalReadAll', './model/RestorationGoalReadAllInner', './model/RestorationMethodMetricCreate', './model/RestorationMethodMetricRead', './model/RestorationMethodMetricReadAll', './model/RestorationMethodMetricUpdate', './model/RestorationMethodMetricVersionRead', './model/RestorationMethodMetricVersionReadAll', './model/RestorationMethodMetricVersionReject', './model/RestorationMethodReadAll', './model/RestorationMethodReadAllInner', './model/RevenueDriverReadAll', './model/RevenueDriverReadAllInner', './model/SustainableDevelopmentGoalReadAll', './model/TeamMemberCreate', './model/TeamMemberRead', './model/TeamMemberReadAll', './model/TeamMemberUpdate', './model/TokenRead', './model/TreeSpeciesCreate', './model/TreeSpeciesRead', './model/TreeSpeciesReadAll', './model/TreeSpeciesUpdate', './model/TreeSpeciesVersionRead', './model/TreeSpeciesVersionReadAll', './model/TreeSpeciesVersionReject', './model/UploadCreate', './model/UserAccept', './model/UserCreate', './model/UserInvite', './model/UserRead', './model/UserReadAll', './model/UserUpdate', './model/VisibilityReadAll', './model/VisibilityReadAllInner', './api/AdminsApi', './api/AuthApi', './api/CarbonCertificationTypesApi', './api/CarbonCertificationVersionsApi', './api/CarbonCertificationsApi', './api/CompatibilityScoresApi', './api/ContinentsApi', './api/CountriesApi', './api/DevicesApi', './api/DocumentTypesApi', './api/DraftsApi', './api/ElevatorVideosApi', './api/FundingBracketsApi', './api/FundingSourcesApi', './api/InterestsApi', './api/LandOwnershipsApi', './api/LandSizesApi', './api/LandTypesApi', './api/MatchesApi', './api/NotificationsApi', './api/OfferContactsApi', './api/OfferDocumentsApi', './api/OffersApi', './api/OrganisationCategoriesApi', './api/OrganisationDocumentVersionsApi', './api/OrganisationDocumentsApi', './api/OrganisationTypesApi', './api/OrganisationVersionsApi', './api/OrganisationsApi', './api/PitchContactsApi', './api/PitchDocumentVersionsApi', './api/PitchDocumentsApi', './api/PitchVersionsApi', './api/PitchesApi', './api/RejectedReasonsApi', './api/ReportingFrequenciesApi', './api/ReportingLevelsApi', './api/ReportsApi', './api/RestorationGoalsApi', './api/RestorationMethodMetricVersionsApi', './api/RestorationMethodMetricsApi', './api/RestorationMethodsApi', './api/RevenueDriversApi', './api/SustainableDevelopmentGoalsApi', './api/TasksApi', './api/TeamMembersApi', './api/TreeSpeciesApi', './api/TreeSpeciesVersionsApi', './api/UploadsApi', './api/UsersApi', './api/VisibilitiesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AdminAccept'), require('./model/AdminInvite'), require('./model/AdminRead'), require('./model/AdminReadAll'), require('./model/AdminUpdate'), require('./model/AuthChange'), require('./model/AuthLogIn'), require('./model/AuthReset'), require('./model/AuthVerify'), require('./model/CarbonCertificationCreate'), require('./model/CarbonCertificationRead'), require('./model/CarbonCertificationReadAll'), require('./model/CarbonCertificationTypeReadAll'), require('./model/CarbonCertificationTypeReadAllInner'), require('./model/CarbonCertificationUpdate'), require('./model/CarbonCertificationVersionRead'), require('./model/CarbonCertificationVersionReadAll'), require('./model/CarbonCertificationVersionReject'), require('./model/CompatibilityScoreCreate'), require('./model/ContinentReadAll'), require('./model/ContinentReadAllInner'), require('./model/CountryReadAll'), require('./model/CountryReadAllInner'), require('./model/DeviceCreate'), require('./model/DeviceRead'), require('./model/DeviceReadAll'), require('./model/DeviceUpdate'), require('./model/DocumentTypeReadAll'), require('./model/DraftCreate'), require('./model/DraftDataRead'), require('./model/DraftDataReadCarbonCertifications'), require('./model/DraftDataReadOffer'), require('./model/DraftDataReadOfferContacts'), require('./model/DraftDataReadOfferDocuments'), require('./model/DraftDataReadPitch'), require('./model/DraftDataReadRestorationMethodMetrics'), require('./model/DraftDataReadTreeSpecies'), require('./model/DraftRead'), require('./model/DraftReadAll'), require('./model/DraftUpdate'), require('./model/DraftUpdateInner'), require('./model/ElevatorVideoCreate'), require('./model/ElevatorVideoRead'), require('./model/Empty'), require('./model/FilterCondition'), require('./model/FilterSearch'), require('./model/FundingBracketReadAll'), require('./model/FundingBracketReadAllInner'), require('./model/FundingSourceReadAll'), require('./model/FundingSourceReadAllInner'), require('./model/InlineResponse200'), require('./model/InlineResponse201'), require('./model/InterestCreate'), require('./model/InterestRead'), require('./model/InterestReadAll'), require('./model/LandOwnershipReadAll'), require('./model/LandOwnershipReadAllInner'), require('./model/LandSizeReadAll'), require('./model/LandSizeReadAllInner'), require('./model/LandTypeReadAll'), require('./model/MaskedOrganisationRead'), require('./model/MaskedTeamMemberRead'), require('./model/MaskedTeamMemberReadAll'), require('./model/MaskedUserRead'), require('./model/MaskedUserReadAll'), require('./model/MatchOfferContactRead'), require('./model/MatchPitchContactRead'), require('./model/MatchRead'), require('./model/MatchReadAll'), require('./model/NotificationRead'), require('./model/NotificationReadAll'), require('./model/OfferComplete'), require('./model/OfferContactCreate'), require('./model/OfferContactRead'), require('./model/OfferContactReadAll'), require('./model/OfferCreate'), require('./model/OfferDocumentCreate'), require('./model/OfferDocumentRead'), require('./model/OfferDocumentReadAll'), require('./model/OfferDocumentUpdate'), require('./model/OfferRead'), require('./model/OfferReadAll'), require('./model/OfferUpdate'), require('./model/OfferVisibility'), require('./model/OrganisationCategoryReadAll'), require('./model/OrganisationCategoryReadAllInner'), require('./model/OrganisationCreate'), require('./model/OrganisationDocumentCreate'), require('./model/OrganisationDocumentRead'), require('./model/OrganisationDocumentReadAll'), require('./model/OrganisationDocumentUpdate'), require('./model/OrganisationDocumentVersionRead'), require('./model/OrganisationDocumentVersionReadAll'), require('./model/OrganisationDocumentVersionReject'), require('./model/OrganisationRead'), require('./model/OrganisationReadAll'), require('./model/OrganisationTypeReadAll'), require('./model/OrganisationUpdate'), require('./model/OrganisationVersionRead'), require('./model/OrganisationVersionReadAll'), require('./model/OrganisationVersionReject'), require('./model/PitchByContinentReadAll'), require('./model/PitchByContinentReadAllInner'), require('./model/PitchComplete'), require('./model/PitchContactCreate'), require('./model/PitchContactRead'), require('./model/PitchContactReadAll'), require('./model/PitchCreate'), require('./model/PitchDocumentCreate'), require('./model/PitchDocumentRead'), require('./model/PitchDocumentReadAll'), require('./model/PitchDocumentUpdate'), require('./model/PitchDocumentVersionRead'), require('./model/PitchDocumentVersionReadAll'), require('./model/PitchDocumentVersionReject'), require('./model/PitchRead'), require('./model/PitchReadAll'), require('./model/PitchUpdate'), require('./model/PitchVersionRead'), require('./model/PitchVersionReadAll'), require('./model/PitchVersionReject'), require('./model/PitchVisibility'), require('./model/RejectedReasonReadAll'), require('./model/RejectedReasonReadAllInner'), require('./model/ReportingFrequencyReadAll'), require('./model/ReportingFrequencyReadAllInner'), require('./model/ReportingLevelReadAll'), require('./model/ReportingLevelReadAllInner'), require('./model/RestorationGoalReadAll'), require('./model/RestorationGoalReadAllInner'), require('./model/RestorationMethodMetricCreate'), require('./model/RestorationMethodMetricRead'), require('./model/RestorationMethodMetricReadAll'), require('./model/RestorationMethodMetricUpdate'), require('./model/RestorationMethodMetricVersionRead'), require('./model/RestorationMethodMetricVersionReadAll'), require('./model/RestorationMethodMetricVersionReject'), require('./model/RestorationMethodReadAll'), require('./model/RestorationMethodReadAllInner'), require('./model/RevenueDriverReadAll'), require('./model/RevenueDriverReadAllInner'), require('./model/SustainableDevelopmentGoalReadAll'), require('./model/TeamMemberCreate'), require('./model/TeamMemberRead'), require('./model/TeamMemberReadAll'), require('./model/TeamMemberUpdate'), require('./model/TokenRead'), require('./model/TreeSpeciesCreate'), require('./model/TreeSpeciesRead'), require('./model/TreeSpeciesReadAll'), require('./model/TreeSpeciesUpdate'), require('./model/TreeSpeciesVersionRead'), require('./model/TreeSpeciesVersionReadAll'), require('./model/TreeSpeciesVersionReject'), require('./model/UploadCreate'), require('./model/UserAccept'), require('./model/UserCreate'), require('./model/UserInvite'), require('./model/UserRead'), require('./model/UserReadAll'), require('./model/UserUpdate'), require('./model/VisibilityReadAll'), require('./model/VisibilityReadAllInner'), require('./api/AdminsApi'), require('./api/AuthApi'), require('./api/CarbonCertificationTypesApi'), require('./api/CarbonCertificationVersionsApi'), require('./api/CarbonCertificationsApi'), require('./api/CompatibilityScoresApi'), require('./api/ContinentsApi'), require('./api/CountriesApi'), require('./api/DevicesApi'), require('./api/DocumentTypesApi'), require('./api/DraftsApi'), require('./api/ElevatorVideosApi'), require('./api/FundingBracketsApi'), require('./api/FundingSourcesApi'), require('./api/InterestsApi'), require('./api/LandOwnershipsApi'), require('./api/LandSizesApi'), require('./api/LandTypesApi'), require('./api/MatchesApi'), require('./api/NotificationsApi'), require('./api/OfferContactsApi'), require('./api/OfferDocumentsApi'), require('./api/OffersApi'), require('./api/OrganisationCategoriesApi'), require('./api/OrganisationDocumentVersionsApi'), require('./api/OrganisationDocumentsApi'), require('./api/OrganisationTypesApi'), require('./api/OrganisationVersionsApi'), require('./api/OrganisationsApi'), require('./api/PitchContactsApi'), require('./api/PitchDocumentVersionsApi'), require('./api/PitchDocumentsApi'), require('./api/PitchVersionsApi'), require('./api/PitchesApi'), require('./api/RejectedReasonsApi'), require('./api/ReportingFrequenciesApi'), require('./api/ReportingLevelsApi'), require('./api/ReportsApi'), require('./api/RestorationGoalsApi'), require('./api/RestorationMethodMetricVersionsApi'), require('./api/RestorationMethodMetricsApi'), require('./api/RestorationMethodsApi'), require('./api/RevenueDriversApi'), require('./api/SustainableDevelopmentGoalsApi'), require('./api/TasksApi'), require('./api/TeamMembersApi'), require('./api/TreeSpeciesApi'), require('./api/TreeSpeciesVersionsApi'), require('./api/UploadsApi'), require('./api/UsersApi'), require('./api/VisibilitiesApi'));
  }
}(function(ApiClient, AdminAccept, AdminInvite, AdminRead, AdminReadAll, AdminUpdate, AuthChange, AuthLogIn, AuthReset, AuthVerify, CarbonCertificationCreate, CarbonCertificationRead, CarbonCertificationReadAll, CarbonCertificationTypeReadAll, CarbonCertificationTypeReadAllInner, CarbonCertificationUpdate, CarbonCertificationVersionRead, CarbonCertificationVersionReadAll, CarbonCertificationVersionReject, CompatibilityScoreCreate, ContinentReadAll, ContinentReadAllInner, CountryReadAll, CountryReadAllInner, DeviceCreate, DeviceRead, DeviceReadAll, DeviceUpdate, DocumentTypeReadAll, DraftCreate, DraftDataRead, DraftDataReadCarbonCertifications, DraftDataReadOffer, DraftDataReadOfferContacts, DraftDataReadOfferDocuments, DraftDataReadPitch, DraftDataReadRestorationMethodMetrics, DraftDataReadTreeSpecies, DraftRead, DraftReadAll, DraftUpdate, DraftUpdateInner, ElevatorVideoCreate, ElevatorVideoRead, Empty, FilterCondition, FilterSearch, FundingBracketReadAll, FundingBracketReadAllInner, FundingSourceReadAll, FundingSourceReadAllInner, InlineResponse200, InlineResponse201, InterestCreate, InterestRead, InterestReadAll, LandOwnershipReadAll, LandOwnershipReadAllInner, LandSizeReadAll, LandSizeReadAllInner, LandTypeReadAll, MaskedOrganisationRead, MaskedTeamMemberRead, MaskedTeamMemberReadAll, MaskedUserRead, MaskedUserReadAll, MatchOfferContactRead, MatchPitchContactRead, MatchRead, MatchReadAll, NotificationRead, NotificationReadAll, OfferComplete, OfferContactCreate, OfferContactRead, OfferContactReadAll, OfferCreate, OfferDocumentCreate, OfferDocumentRead, OfferDocumentReadAll, OfferDocumentUpdate, OfferRead, OfferReadAll, OfferUpdate, OfferVisibility, OrganisationCategoryReadAll, OrganisationCategoryReadAllInner, OrganisationCreate, OrganisationDocumentCreate, OrganisationDocumentRead, OrganisationDocumentReadAll, OrganisationDocumentUpdate, OrganisationDocumentVersionRead, OrganisationDocumentVersionReadAll, OrganisationDocumentVersionReject, OrganisationRead, OrganisationReadAll, OrganisationTypeReadAll, OrganisationUpdate, OrganisationVersionRead, OrganisationVersionReadAll, OrganisationVersionReject, PitchByContinentReadAll, PitchByContinentReadAllInner, PitchComplete, PitchContactCreate, PitchContactRead, PitchContactReadAll, PitchCreate, PitchDocumentCreate, PitchDocumentRead, PitchDocumentReadAll, PitchDocumentUpdate, PitchDocumentVersionRead, PitchDocumentVersionReadAll, PitchDocumentVersionReject, PitchRead, PitchReadAll, PitchUpdate, PitchVersionRead, PitchVersionReadAll, PitchVersionReject, PitchVisibility, RejectedReasonReadAll, RejectedReasonReadAllInner, ReportingFrequencyReadAll, ReportingFrequencyReadAllInner, ReportingLevelReadAll, ReportingLevelReadAllInner, RestorationGoalReadAll, RestorationGoalReadAllInner, RestorationMethodMetricCreate, RestorationMethodMetricRead, RestorationMethodMetricReadAll, RestorationMethodMetricUpdate, RestorationMethodMetricVersionRead, RestorationMethodMetricVersionReadAll, RestorationMethodMetricVersionReject, RestorationMethodReadAll, RestorationMethodReadAllInner, RevenueDriverReadAll, RevenueDriverReadAllInner, SustainableDevelopmentGoalReadAll, TeamMemberCreate, TeamMemberRead, TeamMemberReadAll, TeamMemberUpdate, TokenRead, TreeSpeciesCreate, TreeSpeciesRead, TreeSpeciesReadAll, TreeSpeciesUpdate, TreeSpeciesVersionRead, TreeSpeciesVersionReadAll, TreeSpeciesVersionReject, UploadCreate, UserAccept, UserCreate, UserInvite, UserRead, UserReadAll, UserUpdate, VisibilityReadAll, VisibilityReadAllInner, AdminsApi, AuthApi, CarbonCertificationTypesApi, CarbonCertificationVersionsApi, CarbonCertificationsApi, CompatibilityScoresApi, ContinentsApi, CountriesApi, DevicesApi, DocumentTypesApi, DraftsApi, ElevatorVideosApi, FundingBracketsApi, FundingSourcesApi, InterestsApi, LandOwnershipsApi, LandSizesApi, LandTypesApi, MatchesApi, NotificationsApi, OfferContactsApi, OfferDocumentsApi, OffersApi, OrganisationCategoriesApi, OrganisationDocumentVersionsApi, OrganisationDocumentsApi, OrganisationTypesApi, OrganisationVersionsApi, OrganisationsApi, PitchContactsApi, PitchDocumentVersionsApi, PitchDocumentsApi, PitchVersionsApi, PitchesApi, RejectedReasonsApi, ReportingFrequenciesApi, ReportingLevelsApi, ReportsApi, RestorationGoalsApi, RestorationMethodMetricVersionsApi, RestorationMethodMetricsApi, RestorationMethodsApi, RevenueDriversApi, SustainableDevelopmentGoalsApi, TasksApi, TeamMembersApi, TreeSpeciesApi, TreeSpeciesVersionsApi, UploadsApi, UsersApi, VisibilitiesApi) {
  'use strict';

  /**
   * _AboutThis_API_serves_the_web_and_mobile_apps_for_WRIs_Restoration_Marketplace__AKA_TerraMatch__Authentication__AuthorisationJWTs_are_used_for_authentication__Upon_successful_log_in_a_JWT_will_be_provided_for_you__These_expire_after_12_hours_A_padlock_icon_next_to_an_endpoint_indicates_that_it_requires_an_authenticated_user__For_example_imagespadlock_png_Requests__ResponsesThe_response_bodies_documented_here_will_be_wrapped_in_an_object_adhering_to_the_JSONAPI_specification__Error_CodesAny_errors_returned_in_the_body_of_a_response_will_have_a_unique_code_to_help_identify_the_type_of_error__They_areACCEPTED_ACTIVE_URL_AFTER_AFTER_OR_EQUAL_ALPHA_ALPHA_DASH_ALPHA_NUM_ARRAY_BEFORE_BEFORE_OR_EQUAL_BETWEEN_BOOLEAN_CARBON_CERTIFICATION_TYPE_CONFIRMED_CONTAIN_LOWER_CONTAIN_NUMBER_CONTAIN_UPPER_CONTINENT_COUNTRY_CODE_CUSTOM_DATE_DATE_EQUALS_DATE_FORMAT_DIFFERENT_DIGITS_DIGITS_BETWEEN_DIMENSIONS_DISTINCT_DOCUMENT_TYPE_EMAIL_ENDS_WITH_EXISTS_FILE_FILLED_FUNDING_BRACKET_FUNDING_SOURCE_GT_GTE_IMAGE_IN_IN_ARRAY_INTEGER_IP_IPV4_IPV6_JSON_LAND_OWNERSHIP_LAND_SIZE_LAND_TYPE_LT_LTE_MAX_MIMES_MIMETYPES_MIN_NOT_IN_NOT_PRESENT_NOT_REGEX_NUMERIC_OTHER_VALUE_PRESENT_OTHER_VALUE_NULL_OTHER_VALUE_STRING_ORGANISATION_CATEGORY_ORGANISATION_TYPE_PRESENT_REGEX_REJECTED_REASON_REPORTING_FREQUENCY_REPORTING_LEVEL_REQUIRED_REQUIRED_IF_REQUIRED_UNLESS_REQUIRED_WITH_REQUIRED_WITH_ALL_REQUIRED_WITHOUT_REQUIRED_WITHOUT_ALL_RESTORATION_GOAL_RESTORATION_METHOD_REVENUE_DRIVER_SAME_SIZE_SOFT_URL_STARTS_WITH_STARTS_WITH_FACEBOOK_STARTS_WITH_TWITTER_STARTS_WITH_INSTAGRAM_STARTS_WITH_LINKEDIN_STRICT_FLOAT_STRING_SUSTAINABLE_DEVELOPMENT_GOAL_TIMEZONE_TREE_SPECIES_OWNER_UNIQUE_UPLOADED_URL_UUID_VISIBILITY_UploadsUploads_should_first_be_uploaded_to_the_uploads_endpoint__Upon_success_an_ID_will_be_returned_this_ID_is_valid_for_1_day__Use_this_ID_in_your_request_body_to_bind_the_upload_to_a_property__Elevator_VideosElevator_videos_can_be_created_by_using_the_elevator_videos_endpoint__After_creating_an_elevator_video_you_will_be_returned_an_elevator_video_ID__Use_this_to_check_its_status__Elevator_videos_will_start_off_as_processing_and_change_to_finished_when_it_has_been_build__Once_the_elevator_video_is_built_the_upload_id_property_will_be_present_you_can_use_this_just_like_a_regular_upload_and_attach_it_to_a_pitchs_video_property__Be_sure_to_use_the_elevator_videos_upload_id_property_and_not_its_id_property__An_elevator_videos_status_may_end_up_as_errored_or_timed_out_in_which_case_something_has_gone_wrong__Entity_Relationship_Diagram_imageserd_png_Units_All_prices_are_measured_in_USD_All_land_is_measured_in_hectares_All_time_is_measured_in_months_DraftsWhen_creating_a_draft_the_data_property_be_equal_to_a_string_of_JSON_containing_an_empty_object__You_can_then_manipulate_the_data_property_with_subsequent_updates__When_updating_a_draft_you_will_need_to_use__JSON_Patch_httpjsonpatch_com_requests_to_manipulate_the_data_property__Operations_are_relative_to_the_data_property_which_means_you_dont_need_to_preface_paths_with_data_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var WriRestorationMarketplaceApi = require('index'); // See note below*.
   * var xxxSvc = new WriRestorationMarketplaceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new WriRestorationMarketplaceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new WriRestorationMarketplaceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new WriRestorationMarketplaceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AdminAccept model constructor.
     * @property {module:model/AdminAccept}
     */
    AdminAccept: AdminAccept,
    /**
     * The AdminInvite model constructor.
     * @property {module:model/AdminInvite}
     */
    AdminInvite: AdminInvite,
    /**
     * The AdminRead model constructor.
     * @property {module:model/AdminRead}
     */
    AdminRead: AdminRead,
    /**
     * The AdminReadAll model constructor.
     * @property {module:model/AdminReadAll}
     */
    AdminReadAll: AdminReadAll,
    /**
     * The AdminUpdate model constructor.
     * @property {module:model/AdminUpdate}
     */
    AdminUpdate: AdminUpdate,
    /**
     * The AuthChange model constructor.
     * @property {module:model/AuthChange}
     */
    AuthChange: AuthChange,
    /**
     * The AuthLogIn model constructor.
     * @property {module:model/AuthLogIn}
     */
    AuthLogIn: AuthLogIn,
    /**
     * The AuthReset model constructor.
     * @property {module:model/AuthReset}
     */
    AuthReset: AuthReset,
    /**
     * The AuthVerify model constructor.
     * @property {module:model/AuthVerify}
     */
    AuthVerify: AuthVerify,
    /**
     * The CarbonCertificationCreate model constructor.
     * @property {module:model/CarbonCertificationCreate}
     */
    CarbonCertificationCreate: CarbonCertificationCreate,
    /**
     * The CarbonCertificationRead model constructor.
     * @property {module:model/CarbonCertificationRead}
     */
    CarbonCertificationRead: CarbonCertificationRead,
    /**
     * The CarbonCertificationReadAll model constructor.
     * @property {module:model/CarbonCertificationReadAll}
     */
    CarbonCertificationReadAll: CarbonCertificationReadAll,
    /**
     * The CarbonCertificationTypeReadAll model constructor.
     * @property {module:model/CarbonCertificationTypeReadAll}
     */
    CarbonCertificationTypeReadAll: CarbonCertificationTypeReadAll,
    /**
     * The CarbonCertificationTypeReadAllInner model constructor.
     * @property {module:model/CarbonCertificationTypeReadAllInner}
     */
    CarbonCertificationTypeReadAllInner: CarbonCertificationTypeReadAllInner,
    /**
     * The CarbonCertificationUpdate model constructor.
     * @property {module:model/CarbonCertificationUpdate}
     */
    CarbonCertificationUpdate: CarbonCertificationUpdate,
    /**
     * The CarbonCertificationVersionRead model constructor.
     * @property {module:model/CarbonCertificationVersionRead}
     */
    CarbonCertificationVersionRead: CarbonCertificationVersionRead,
    /**
     * The CarbonCertificationVersionReadAll model constructor.
     * @property {module:model/CarbonCertificationVersionReadAll}
     */
    CarbonCertificationVersionReadAll: CarbonCertificationVersionReadAll,
    /**
     * The CarbonCertificationVersionReject model constructor.
     * @property {module:model/CarbonCertificationVersionReject}
     */
    CarbonCertificationVersionReject: CarbonCertificationVersionReject,
    /**
     * The CompatibilityScoreCreate model constructor.
     * @property {module:model/CompatibilityScoreCreate}
     */
    CompatibilityScoreCreate: CompatibilityScoreCreate,
    /**
     * The ContinentReadAll model constructor.
     * @property {module:model/ContinentReadAll}
     */
    ContinentReadAll: ContinentReadAll,
    /**
     * The ContinentReadAllInner model constructor.
     * @property {module:model/ContinentReadAllInner}
     */
    ContinentReadAllInner: ContinentReadAllInner,
    /**
     * The CountryReadAll model constructor.
     * @property {module:model/CountryReadAll}
     */
    CountryReadAll: CountryReadAll,
    /**
     * The CountryReadAllInner model constructor.
     * @property {module:model/CountryReadAllInner}
     */
    CountryReadAllInner: CountryReadAllInner,
    /**
     * The DeviceCreate model constructor.
     * @property {module:model/DeviceCreate}
     */
    DeviceCreate: DeviceCreate,
    /**
     * The DeviceRead model constructor.
     * @property {module:model/DeviceRead}
     */
    DeviceRead: DeviceRead,
    /**
     * The DeviceReadAll model constructor.
     * @property {module:model/DeviceReadAll}
     */
    DeviceReadAll: DeviceReadAll,
    /**
     * The DeviceUpdate model constructor.
     * @property {module:model/DeviceUpdate}
     */
    DeviceUpdate: DeviceUpdate,
    /**
     * The DocumentTypeReadAll model constructor.
     * @property {module:model/DocumentTypeReadAll}
     */
    DocumentTypeReadAll: DocumentTypeReadAll,
    /**
     * The DraftCreate model constructor.
     * @property {module:model/DraftCreate}
     */
    DraftCreate: DraftCreate,
    /**
     * The DraftDataRead model constructor.
     * @property {module:model/DraftDataRead}
     */
    DraftDataRead: DraftDataRead,
    /**
     * The DraftDataReadCarbonCertifications model constructor.
     * @property {module:model/DraftDataReadCarbonCertifications}
     */
    DraftDataReadCarbonCertifications: DraftDataReadCarbonCertifications,
    /**
     * The DraftDataReadOffer model constructor.
     * @property {module:model/DraftDataReadOffer}
     */
    DraftDataReadOffer: DraftDataReadOffer,
    /**
     * The DraftDataReadOfferContacts model constructor.
     * @property {module:model/DraftDataReadOfferContacts}
     */
    DraftDataReadOfferContacts: DraftDataReadOfferContacts,
    /**
     * The DraftDataReadOfferDocuments model constructor.
     * @property {module:model/DraftDataReadOfferDocuments}
     */
    DraftDataReadOfferDocuments: DraftDataReadOfferDocuments,
    /**
     * The DraftDataReadPitch model constructor.
     * @property {module:model/DraftDataReadPitch}
     */
    DraftDataReadPitch: DraftDataReadPitch,
    /**
     * The DraftDataReadRestorationMethodMetrics model constructor.
     * @property {module:model/DraftDataReadRestorationMethodMetrics}
     */
    DraftDataReadRestorationMethodMetrics: DraftDataReadRestorationMethodMetrics,
    /**
     * The DraftDataReadTreeSpecies model constructor.
     * @property {module:model/DraftDataReadTreeSpecies}
     */
    DraftDataReadTreeSpecies: DraftDataReadTreeSpecies,
    /**
     * The DraftRead model constructor.
     * @property {module:model/DraftRead}
     */
    DraftRead: DraftRead,
    /**
     * The DraftReadAll model constructor.
     * @property {module:model/DraftReadAll}
     */
    DraftReadAll: DraftReadAll,
    /**
     * The DraftUpdate model constructor.
     * @property {module:model/DraftUpdate}
     */
    DraftUpdate: DraftUpdate,
    /**
     * The DraftUpdateInner model constructor.
     * @property {module:model/DraftUpdateInner}
     */
    DraftUpdateInner: DraftUpdateInner,
    /**
     * The ElevatorVideoCreate model constructor.
     * @property {module:model/ElevatorVideoCreate}
     */
    ElevatorVideoCreate: ElevatorVideoCreate,
    /**
     * The ElevatorVideoRead model constructor.
     * @property {module:model/ElevatorVideoRead}
     */
    ElevatorVideoRead: ElevatorVideoRead,
    /**
     * The Empty model constructor.
     * @property {module:model/Empty}
     */
    Empty: Empty,
    /**
     * The FilterCondition model constructor.
     * @property {module:model/FilterCondition}
     */
    FilterCondition: FilterCondition,
    /**
     * The FilterSearch model constructor.
     * @property {module:model/FilterSearch}
     */
    FilterSearch: FilterSearch,
    /**
     * The FundingBracketReadAll model constructor.
     * @property {module:model/FundingBracketReadAll}
     */
    FundingBracketReadAll: FundingBracketReadAll,
    /**
     * The FundingBracketReadAllInner model constructor.
     * @property {module:model/FundingBracketReadAllInner}
     */
    FundingBracketReadAllInner: FundingBracketReadAllInner,
    /**
     * The FundingSourceReadAll model constructor.
     * @property {module:model/FundingSourceReadAll}
     */
    FundingSourceReadAll: FundingSourceReadAll,
    /**
     * The FundingSourceReadAllInner model constructor.
     * @property {module:model/FundingSourceReadAllInner}
     */
    FundingSourceReadAllInner: FundingSourceReadAllInner,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse201 model constructor.
     * @property {module:model/InlineResponse201}
     */
    InlineResponse201: InlineResponse201,
    /**
     * The InterestCreate model constructor.
     * @property {module:model/InterestCreate}
     */
    InterestCreate: InterestCreate,
    /**
     * The InterestRead model constructor.
     * @property {module:model/InterestRead}
     */
    InterestRead: InterestRead,
    /**
     * The InterestReadAll model constructor.
     * @property {module:model/InterestReadAll}
     */
    InterestReadAll: InterestReadAll,
    /**
     * The LandOwnershipReadAll model constructor.
     * @property {module:model/LandOwnershipReadAll}
     */
    LandOwnershipReadAll: LandOwnershipReadAll,
    /**
     * The LandOwnershipReadAllInner model constructor.
     * @property {module:model/LandOwnershipReadAllInner}
     */
    LandOwnershipReadAllInner: LandOwnershipReadAllInner,
    /**
     * The LandSizeReadAll model constructor.
     * @property {module:model/LandSizeReadAll}
     */
    LandSizeReadAll: LandSizeReadAll,
    /**
     * The LandSizeReadAllInner model constructor.
     * @property {module:model/LandSizeReadAllInner}
     */
    LandSizeReadAllInner: LandSizeReadAllInner,
    /**
     * The LandTypeReadAll model constructor.
     * @property {module:model/LandTypeReadAll}
     */
    LandTypeReadAll: LandTypeReadAll,
    /**
     * The MaskedOrganisationRead model constructor.
     * @property {module:model/MaskedOrganisationRead}
     */
    MaskedOrganisationRead: MaskedOrganisationRead,
    /**
     * The MaskedTeamMemberRead model constructor.
     * @property {module:model/MaskedTeamMemberRead}
     */
    MaskedTeamMemberRead: MaskedTeamMemberRead,
    /**
     * The MaskedTeamMemberReadAll model constructor.
     * @property {module:model/MaskedTeamMemberReadAll}
     */
    MaskedTeamMemberReadAll: MaskedTeamMemberReadAll,
    /**
     * The MaskedUserRead model constructor.
     * @property {module:model/MaskedUserRead}
     */
    MaskedUserRead: MaskedUserRead,
    /**
     * The MaskedUserReadAll model constructor.
     * @property {module:model/MaskedUserReadAll}
     */
    MaskedUserReadAll: MaskedUserReadAll,
    /**
     * The MatchOfferContactRead model constructor.
     * @property {module:model/MatchOfferContactRead}
     */
    MatchOfferContactRead: MatchOfferContactRead,
    /**
     * The MatchPitchContactRead model constructor.
     * @property {module:model/MatchPitchContactRead}
     */
    MatchPitchContactRead: MatchPitchContactRead,
    /**
     * The MatchRead model constructor.
     * @property {module:model/MatchRead}
     */
    MatchRead: MatchRead,
    /**
     * The MatchReadAll model constructor.
     * @property {module:model/MatchReadAll}
     */
    MatchReadAll: MatchReadAll,
    /**
     * The NotificationRead model constructor.
     * @property {module:model/NotificationRead}
     */
    NotificationRead: NotificationRead,
    /**
     * The NotificationReadAll model constructor.
     * @property {module:model/NotificationReadAll}
     */
    NotificationReadAll: NotificationReadAll,
    /**
     * The OfferComplete model constructor.
     * @property {module:model/OfferComplete}
     */
    OfferComplete: OfferComplete,
    /**
     * The OfferContactCreate model constructor.
     * @property {module:model/OfferContactCreate}
     */
    OfferContactCreate: OfferContactCreate,
    /**
     * The OfferContactRead model constructor.
     * @property {module:model/OfferContactRead}
     */
    OfferContactRead: OfferContactRead,
    /**
     * The OfferContactReadAll model constructor.
     * @property {module:model/OfferContactReadAll}
     */
    OfferContactReadAll: OfferContactReadAll,
    /**
     * The OfferCreate model constructor.
     * @property {module:model/OfferCreate}
     */
    OfferCreate: OfferCreate,
    /**
     * The OfferDocumentCreate model constructor.
     * @property {module:model/OfferDocumentCreate}
     */
    OfferDocumentCreate: OfferDocumentCreate,
    /**
     * The OfferDocumentRead model constructor.
     * @property {module:model/OfferDocumentRead}
     */
    OfferDocumentRead: OfferDocumentRead,
    /**
     * The OfferDocumentReadAll model constructor.
     * @property {module:model/OfferDocumentReadAll}
     */
    OfferDocumentReadAll: OfferDocumentReadAll,
    /**
     * The OfferDocumentUpdate model constructor.
     * @property {module:model/OfferDocumentUpdate}
     */
    OfferDocumentUpdate: OfferDocumentUpdate,
    /**
     * The OfferRead model constructor.
     * @property {module:model/OfferRead}
     */
    OfferRead: OfferRead,
    /**
     * The OfferReadAll model constructor.
     * @property {module:model/OfferReadAll}
     */
    OfferReadAll: OfferReadAll,
    /**
     * The OfferUpdate model constructor.
     * @property {module:model/OfferUpdate}
     */
    OfferUpdate: OfferUpdate,
    /**
     * The OfferVisibility model constructor.
     * @property {module:model/OfferVisibility}
     */
    OfferVisibility: OfferVisibility,
    /**
     * The OrganisationCategoryReadAll model constructor.
     * @property {module:model/OrganisationCategoryReadAll}
     */
    OrganisationCategoryReadAll: OrganisationCategoryReadAll,
    /**
     * The OrganisationCategoryReadAllInner model constructor.
     * @property {module:model/OrganisationCategoryReadAllInner}
     */
    OrganisationCategoryReadAllInner: OrganisationCategoryReadAllInner,
    /**
     * The OrganisationCreate model constructor.
     * @property {module:model/OrganisationCreate}
     */
    OrganisationCreate: OrganisationCreate,
    /**
     * The OrganisationDocumentCreate model constructor.
     * @property {module:model/OrganisationDocumentCreate}
     */
    OrganisationDocumentCreate: OrganisationDocumentCreate,
    /**
     * The OrganisationDocumentRead model constructor.
     * @property {module:model/OrganisationDocumentRead}
     */
    OrganisationDocumentRead: OrganisationDocumentRead,
    /**
     * The OrganisationDocumentReadAll model constructor.
     * @property {module:model/OrganisationDocumentReadAll}
     */
    OrganisationDocumentReadAll: OrganisationDocumentReadAll,
    /**
     * The OrganisationDocumentUpdate model constructor.
     * @property {module:model/OrganisationDocumentUpdate}
     */
    OrganisationDocumentUpdate: OrganisationDocumentUpdate,
    /**
     * The OrganisationDocumentVersionRead model constructor.
     * @property {module:model/OrganisationDocumentVersionRead}
     */
    OrganisationDocumentVersionRead: OrganisationDocumentVersionRead,
    /**
     * The OrganisationDocumentVersionReadAll model constructor.
     * @property {module:model/OrganisationDocumentVersionReadAll}
     */
    OrganisationDocumentVersionReadAll: OrganisationDocumentVersionReadAll,
    /**
     * The OrganisationDocumentVersionReject model constructor.
     * @property {module:model/OrganisationDocumentVersionReject}
     */
    OrganisationDocumentVersionReject: OrganisationDocumentVersionReject,
    /**
     * The OrganisationRead model constructor.
     * @property {module:model/OrganisationRead}
     */
    OrganisationRead: OrganisationRead,
    /**
     * The OrganisationReadAll model constructor.
     * @property {module:model/OrganisationReadAll}
     */
    OrganisationReadAll: OrganisationReadAll,
    /**
     * The OrganisationTypeReadAll model constructor.
     * @property {module:model/OrganisationTypeReadAll}
     */
    OrganisationTypeReadAll: OrganisationTypeReadAll,
    /**
     * The OrganisationUpdate model constructor.
     * @property {module:model/OrganisationUpdate}
     */
    OrganisationUpdate: OrganisationUpdate,
    /**
     * The OrganisationVersionRead model constructor.
     * @property {module:model/OrganisationVersionRead}
     */
    OrganisationVersionRead: OrganisationVersionRead,
    /**
     * The OrganisationVersionReadAll model constructor.
     * @property {module:model/OrganisationVersionReadAll}
     */
    OrganisationVersionReadAll: OrganisationVersionReadAll,
    /**
     * The OrganisationVersionReject model constructor.
     * @property {module:model/OrganisationVersionReject}
     */
    OrganisationVersionReject: OrganisationVersionReject,
    /**
     * The PitchByContinentReadAll model constructor.
     * @property {module:model/PitchByContinentReadAll}
     */
    PitchByContinentReadAll: PitchByContinentReadAll,
    /**
     * The PitchByContinentReadAllInner model constructor.
     * @property {module:model/PitchByContinentReadAllInner}
     */
    PitchByContinentReadAllInner: PitchByContinentReadAllInner,
    /**
     * The PitchComplete model constructor.
     * @property {module:model/PitchComplete}
     */
    PitchComplete: PitchComplete,
    /**
     * The PitchContactCreate model constructor.
     * @property {module:model/PitchContactCreate}
     */
    PitchContactCreate: PitchContactCreate,
    /**
     * The PitchContactRead model constructor.
     * @property {module:model/PitchContactRead}
     */
    PitchContactRead: PitchContactRead,
    /**
     * The PitchContactReadAll model constructor.
     * @property {module:model/PitchContactReadAll}
     */
    PitchContactReadAll: PitchContactReadAll,
    /**
     * The PitchCreate model constructor.
     * @property {module:model/PitchCreate}
     */
    PitchCreate: PitchCreate,
    /**
     * The PitchDocumentCreate model constructor.
     * @property {module:model/PitchDocumentCreate}
     */
    PitchDocumentCreate: PitchDocumentCreate,
    /**
     * The PitchDocumentRead model constructor.
     * @property {module:model/PitchDocumentRead}
     */
    PitchDocumentRead: PitchDocumentRead,
    /**
     * The PitchDocumentReadAll model constructor.
     * @property {module:model/PitchDocumentReadAll}
     */
    PitchDocumentReadAll: PitchDocumentReadAll,
    /**
     * The PitchDocumentUpdate model constructor.
     * @property {module:model/PitchDocumentUpdate}
     */
    PitchDocumentUpdate: PitchDocumentUpdate,
    /**
     * The PitchDocumentVersionRead model constructor.
     * @property {module:model/PitchDocumentVersionRead}
     */
    PitchDocumentVersionRead: PitchDocumentVersionRead,
    /**
     * The PitchDocumentVersionReadAll model constructor.
     * @property {module:model/PitchDocumentVersionReadAll}
     */
    PitchDocumentVersionReadAll: PitchDocumentVersionReadAll,
    /**
     * The PitchDocumentVersionReject model constructor.
     * @property {module:model/PitchDocumentVersionReject}
     */
    PitchDocumentVersionReject: PitchDocumentVersionReject,
    /**
     * The PitchRead model constructor.
     * @property {module:model/PitchRead}
     */
    PitchRead: PitchRead,
    /**
     * The PitchReadAll model constructor.
     * @property {module:model/PitchReadAll}
     */
    PitchReadAll: PitchReadAll,
    /**
     * The PitchUpdate model constructor.
     * @property {module:model/PitchUpdate}
     */
    PitchUpdate: PitchUpdate,
    /**
     * The PitchVersionRead model constructor.
     * @property {module:model/PitchVersionRead}
     */
    PitchVersionRead: PitchVersionRead,
    /**
     * The PitchVersionReadAll model constructor.
     * @property {module:model/PitchVersionReadAll}
     */
    PitchVersionReadAll: PitchVersionReadAll,
    /**
     * The PitchVersionReject model constructor.
     * @property {module:model/PitchVersionReject}
     */
    PitchVersionReject: PitchVersionReject,
    /**
     * The PitchVisibility model constructor.
     * @property {module:model/PitchVisibility}
     */
    PitchVisibility: PitchVisibility,
    /**
     * The RejectedReasonReadAll model constructor.
     * @property {module:model/RejectedReasonReadAll}
     */
    RejectedReasonReadAll: RejectedReasonReadAll,
    /**
     * The RejectedReasonReadAllInner model constructor.
     * @property {module:model/RejectedReasonReadAllInner}
     */
    RejectedReasonReadAllInner: RejectedReasonReadAllInner,
    /**
     * The ReportingFrequencyReadAll model constructor.
     * @property {module:model/ReportingFrequencyReadAll}
     */
    ReportingFrequencyReadAll: ReportingFrequencyReadAll,
    /**
     * The ReportingFrequencyReadAllInner model constructor.
     * @property {module:model/ReportingFrequencyReadAllInner}
     */
    ReportingFrequencyReadAllInner: ReportingFrequencyReadAllInner,
    /**
     * The ReportingLevelReadAll model constructor.
     * @property {module:model/ReportingLevelReadAll}
     */
    ReportingLevelReadAll: ReportingLevelReadAll,
    /**
     * The ReportingLevelReadAllInner model constructor.
     * @property {module:model/ReportingLevelReadAllInner}
     */
    ReportingLevelReadAllInner: ReportingLevelReadAllInner,
    /**
     * The RestorationGoalReadAll model constructor.
     * @property {module:model/RestorationGoalReadAll}
     */
    RestorationGoalReadAll: RestorationGoalReadAll,
    /**
     * The RestorationGoalReadAllInner model constructor.
     * @property {module:model/RestorationGoalReadAllInner}
     */
    RestorationGoalReadAllInner: RestorationGoalReadAllInner,
    /**
     * The RestorationMethodMetricCreate model constructor.
     * @property {module:model/RestorationMethodMetricCreate}
     */
    RestorationMethodMetricCreate: RestorationMethodMetricCreate,
    /**
     * The RestorationMethodMetricRead model constructor.
     * @property {module:model/RestorationMethodMetricRead}
     */
    RestorationMethodMetricRead: RestorationMethodMetricRead,
    /**
     * The RestorationMethodMetricReadAll model constructor.
     * @property {module:model/RestorationMethodMetricReadAll}
     */
    RestorationMethodMetricReadAll: RestorationMethodMetricReadAll,
    /**
     * The RestorationMethodMetricUpdate model constructor.
     * @property {module:model/RestorationMethodMetricUpdate}
     */
    RestorationMethodMetricUpdate: RestorationMethodMetricUpdate,
    /**
     * The RestorationMethodMetricVersionRead model constructor.
     * @property {module:model/RestorationMethodMetricVersionRead}
     */
    RestorationMethodMetricVersionRead: RestorationMethodMetricVersionRead,
    /**
     * The RestorationMethodMetricVersionReadAll model constructor.
     * @property {module:model/RestorationMethodMetricVersionReadAll}
     */
    RestorationMethodMetricVersionReadAll: RestorationMethodMetricVersionReadAll,
    /**
     * The RestorationMethodMetricVersionReject model constructor.
     * @property {module:model/RestorationMethodMetricVersionReject}
     */
    RestorationMethodMetricVersionReject: RestorationMethodMetricVersionReject,
    /**
     * The RestorationMethodReadAll model constructor.
     * @property {module:model/RestorationMethodReadAll}
     */
    RestorationMethodReadAll: RestorationMethodReadAll,
    /**
     * The RestorationMethodReadAllInner model constructor.
     * @property {module:model/RestorationMethodReadAllInner}
     */
    RestorationMethodReadAllInner: RestorationMethodReadAllInner,
    /**
     * The RevenueDriverReadAll model constructor.
     * @property {module:model/RevenueDriverReadAll}
     */
    RevenueDriverReadAll: RevenueDriverReadAll,
    /**
     * The RevenueDriverReadAllInner model constructor.
     * @property {module:model/RevenueDriverReadAllInner}
     */
    RevenueDriverReadAllInner: RevenueDriverReadAllInner,
    /**
     * The SustainableDevelopmentGoalReadAll model constructor.
     * @property {module:model/SustainableDevelopmentGoalReadAll}
     */
    SustainableDevelopmentGoalReadAll: SustainableDevelopmentGoalReadAll,
    /**
     * The TeamMemberCreate model constructor.
     * @property {module:model/TeamMemberCreate}
     */
    TeamMemberCreate: TeamMemberCreate,
    /**
     * The TeamMemberRead model constructor.
     * @property {module:model/TeamMemberRead}
     */
    TeamMemberRead: TeamMemberRead,
    /**
     * The TeamMemberReadAll model constructor.
     * @property {module:model/TeamMemberReadAll}
     */
    TeamMemberReadAll: TeamMemberReadAll,
    /**
     * The TeamMemberUpdate model constructor.
     * @property {module:model/TeamMemberUpdate}
     */
    TeamMemberUpdate: TeamMemberUpdate,
    /**
     * The TokenRead model constructor.
     * @property {module:model/TokenRead}
     */
    TokenRead: TokenRead,
    /**
     * The TreeSpeciesCreate model constructor.
     * @property {module:model/TreeSpeciesCreate}
     */
    TreeSpeciesCreate: TreeSpeciesCreate,
    /**
     * The TreeSpeciesRead model constructor.
     * @property {module:model/TreeSpeciesRead}
     */
    TreeSpeciesRead: TreeSpeciesRead,
    /**
     * The TreeSpeciesReadAll model constructor.
     * @property {module:model/TreeSpeciesReadAll}
     */
    TreeSpeciesReadAll: TreeSpeciesReadAll,
    /**
     * The TreeSpeciesUpdate model constructor.
     * @property {module:model/TreeSpeciesUpdate}
     */
    TreeSpeciesUpdate: TreeSpeciesUpdate,
    /**
     * The TreeSpeciesVersionRead model constructor.
     * @property {module:model/TreeSpeciesVersionRead}
     */
    TreeSpeciesVersionRead: TreeSpeciesVersionRead,
    /**
     * The TreeSpeciesVersionReadAll model constructor.
     * @property {module:model/TreeSpeciesVersionReadAll}
     */
    TreeSpeciesVersionReadAll: TreeSpeciesVersionReadAll,
    /**
     * The TreeSpeciesVersionReject model constructor.
     * @property {module:model/TreeSpeciesVersionReject}
     */
    TreeSpeciesVersionReject: TreeSpeciesVersionReject,
    /**
     * The UploadCreate model constructor.
     * @property {module:model/UploadCreate}
     */
    UploadCreate: UploadCreate,
    /**
     * The UserAccept model constructor.
     * @property {module:model/UserAccept}
     */
    UserAccept: UserAccept,
    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate: UserCreate,
    /**
     * The UserInvite model constructor.
     * @property {module:model/UserInvite}
     */
    UserInvite: UserInvite,
    /**
     * The UserRead model constructor.
     * @property {module:model/UserRead}
     */
    UserRead: UserRead,
    /**
     * The UserReadAll model constructor.
     * @property {module:model/UserReadAll}
     */
    UserReadAll: UserReadAll,
    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate: UserUpdate,
    /**
     * The VisibilityReadAll model constructor.
     * @property {module:model/VisibilityReadAll}
     */
    VisibilityReadAll: VisibilityReadAll,
    /**
     * The VisibilityReadAllInner model constructor.
     * @property {module:model/VisibilityReadAllInner}
     */
    VisibilityReadAllInner: VisibilityReadAllInner,
    /**
     * The AdminsApi service constructor.
     * @property {module:api/AdminsApi}
     */
    AdminsApi: AdminsApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The CarbonCertificationTypesApi service constructor.
     * @property {module:api/CarbonCertificationTypesApi}
     */
    CarbonCertificationTypesApi: CarbonCertificationTypesApi,
    /**
     * The CarbonCertificationVersionsApi service constructor.
     * @property {module:api/CarbonCertificationVersionsApi}
     */
    CarbonCertificationVersionsApi: CarbonCertificationVersionsApi,
    /**
     * The CarbonCertificationsApi service constructor.
     * @property {module:api/CarbonCertificationsApi}
     */
    CarbonCertificationsApi: CarbonCertificationsApi,
    /**
     * The CompatibilityScoresApi service constructor.
     * @property {module:api/CompatibilityScoresApi}
     */
    CompatibilityScoresApi: CompatibilityScoresApi,
    /**
     * The ContinentsApi service constructor.
     * @property {module:api/ContinentsApi}
     */
    ContinentsApi: ContinentsApi,
    /**
     * The CountriesApi service constructor.
     * @property {module:api/CountriesApi}
     */
    CountriesApi: CountriesApi,
    /**
     * The DevicesApi service constructor.
     * @property {module:api/DevicesApi}
     */
    DevicesApi: DevicesApi,
    /**
     * The DocumentTypesApi service constructor.
     * @property {module:api/DocumentTypesApi}
     */
    DocumentTypesApi: DocumentTypesApi,
    /**
     * The DraftsApi service constructor.
     * @property {module:api/DraftsApi}
     */
    DraftsApi: DraftsApi,
    /**
     * The ElevatorVideosApi service constructor.
     * @property {module:api/ElevatorVideosApi}
     */
    ElevatorVideosApi: ElevatorVideosApi,
    /**
     * The FundingBracketsApi service constructor.
     * @property {module:api/FundingBracketsApi}
     */
    FundingBracketsApi: FundingBracketsApi,
    /**
     * The FundingSourcesApi service constructor.
     * @property {module:api/FundingSourcesApi}
     */
    FundingSourcesApi: FundingSourcesApi,
    /**
     * The InterestsApi service constructor.
     * @property {module:api/InterestsApi}
     */
    InterestsApi: InterestsApi,
    /**
     * The LandOwnershipsApi service constructor.
     * @property {module:api/LandOwnershipsApi}
     */
    LandOwnershipsApi: LandOwnershipsApi,
    /**
     * The LandSizesApi service constructor.
     * @property {module:api/LandSizesApi}
     */
    LandSizesApi: LandSizesApi,
    /**
     * The LandTypesApi service constructor.
     * @property {module:api/LandTypesApi}
     */
    LandTypesApi: LandTypesApi,
    /**
     * The MatchesApi service constructor.
     * @property {module:api/MatchesApi}
     */
    MatchesApi: MatchesApi,
    /**
     * The NotificationsApi service constructor.
     * @property {module:api/NotificationsApi}
     */
    NotificationsApi: NotificationsApi,
    /**
     * The OfferContactsApi service constructor.
     * @property {module:api/OfferContactsApi}
     */
    OfferContactsApi: OfferContactsApi,
    /**
     * The OfferDocumentsApi service constructor.
     * @property {module:api/OfferDocumentsApi}
     */
    OfferDocumentsApi: OfferDocumentsApi,
    /**
     * The OffersApi service constructor.
     * @property {module:api/OffersApi}
     */
    OffersApi: OffersApi,
    /**
     * The OrganisationCategoriesApi service constructor.
     * @property {module:api/OrganisationCategoriesApi}
     */
    OrganisationCategoriesApi: OrganisationCategoriesApi,
    /**
     * The OrganisationDocumentVersionsApi service constructor.
     * @property {module:api/OrganisationDocumentVersionsApi}
     */
    OrganisationDocumentVersionsApi: OrganisationDocumentVersionsApi,
    /**
     * The OrganisationDocumentsApi service constructor.
     * @property {module:api/OrganisationDocumentsApi}
     */
    OrganisationDocumentsApi: OrganisationDocumentsApi,
    /**
     * The OrganisationTypesApi service constructor.
     * @property {module:api/OrganisationTypesApi}
     */
    OrganisationTypesApi: OrganisationTypesApi,
    /**
     * The OrganisationVersionsApi service constructor.
     * @property {module:api/OrganisationVersionsApi}
     */
    OrganisationVersionsApi: OrganisationVersionsApi,
    /**
     * The OrganisationsApi service constructor.
     * @property {module:api/OrganisationsApi}
     */
    OrganisationsApi: OrganisationsApi,
    /**
     * The PitchContactsApi service constructor.
     * @property {module:api/PitchContactsApi}
     */
    PitchContactsApi: PitchContactsApi,
    /**
     * The PitchDocumentVersionsApi service constructor.
     * @property {module:api/PitchDocumentVersionsApi}
     */
    PitchDocumentVersionsApi: PitchDocumentVersionsApi,
    /**
     * The PitchDocumentsApi service constructor.
     * @property {module:api/PitchDocumentsApi}
     */
    PitchDocumentsApi: PitchDocumentsApi,
    /**
     * The PitchVersionsApi service constructor.
     * @property {module:api/PitchVersionsApi}
     */
    PitchVersionsApi: PitchVersionsApi,
    /**
     * The PitchesApi service constructor.
     * @property {module:api/PitchesApi}
     */
    PitchesApi: PitchesApi,
    /**
     * The RejectedReasonsApi service constructor.
     * @property {module:api/RejectedReasonsApi}
     */
    RejectedReasonsApi: RejectedReasonsApi,
    /**
     * The ReportingFrequenciesApi service constructor.
     * @property {module:api/ReportingFrequenciesApi}
     */
    ReportingFrequenciesApi: ReportingFrequenciesApi,
    /**
     * The ReportingLevelsApi service constructor.
     * @property {module:api/ReportingLevelsApi}
     */
    ReportingLevelsApi: ReportingLevelsApi,
    /**
     * The ReportsApi service constructor.
     * @property {module:api/ReportsApi}
     */
    ReportsApi: ReportsApi,
    /**
     * The RestorationGoalsApi service constructor.
     * @property {module:api/RestorationGoalsApi}
     */
    RestorationGoalsApi: RestorationGoalsApi,
    /**
     * The RestorationMethodMetricVersionsApi service constructor.
     * @property {module:api/RestorationMethodMetricVersionsApi}
     */
    RestorationMethodMetricVersionsApi: RestorationMethodMetricVersionsApi,
    /**
     * The RestorationMethodMetricsApi service constructor.
     * @property {module:api/RestorationMethodMetricsApi}
     */
    RestorationMethodMetricsApi: RestorationMethodMetricsApi,
    /**
     * The RestorationMethodsApi service constructor.
     * @property {module:api/RestorationMethodsApi}
     */
    RestorationMethodsApi: RestorationMethodsApi,
    /**
     * The RevenueDriversApi service constructor.
     * @property {module:api/RevenueDriversApi}
     */
    RevenueDriversApi: RevenueDriversApi,
    /**
     * The SustainableDevelopmentGoalsApi service constructor.
     * @property {module:api/SustainableDevelopmentGoalsApi}
     */
    SustainableDevelopmentGoalsApi: SustainableDevelopmentGoalsApi,
    /**
     * The TasksApi service constructor.
     * @property {module:api/TasksApi}
     */
    TasksApi: TasksApi,
    /**
     * The TeamMembersApi service constructor.
     * @property {module:api/TeamMembersApi}
     */
    TeamMembersApi: TeamMembersApi,
    /**
     * The TreeSpeciesApi service constructor.
     * @property {module:api/TreeSpeciesApi}
     */
    TreeSpeciesApi: TreeSpeciesApi,
    /**
     * The TreeSpeciesVersionsApi service constructor.
     * @property {module:api/TreeSpeciesVersionsApi}
     */
    TreeSpeciesVersionsApi: TreeSpeciesVersionsApi,
    /**
     * The UploadsApi service constructor.
     * @property {module:api/UploadsApi}
     */
    UploadsApi: UploadsApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi,
    /**
     * The VisibilitiesApi service constructor.
     * @property {module:api/VisibilitiesApi}
     */
    VisibilitiesApi: VisibilitiesApi
  };

  return exports;
}));
