/**
 * Generated by @openapi-codegen
 *
 * @version 1.0.0
 */
export type OfferVisibility = {
  visibility?: string;
};

export type PitchVisibility = {
  visibility?: string;
};

export type DraftCreate = {
  name?: string;
  type?: string;
  due_submission_id?: number;
  terrafund_due_submission_id?: number;
  is_from_mobile?: boolean;
};

export type DraftMerge = {
  draft_ids?: number[];
  type?: string;
};

export type DraftDataRead = {
  offer?: {
    name?: string;
    description?: string;
    land_types?: string[];
    land_ownerships?: string[];
    land_size?: string;
    land_continent?: string;
    land_country?: string;
    restoration_methods?: string[];
    restoration_goals?: string[];
    funding_sources?: string[];
    funding_amount?: number;
    funding_bracket?: string;
    /**
     * @format float
     */
    price_per_tree?: number;
    long_term_engagement?: boolean;
    reporting_frequency?: string;
    reporting_level?: string;
    sustainable_development_goals?: string[];
    cover_photo?: string;
    video?: string;
  };
  offer_contacts?: {
    user_id?: number;
    team_member_id?: number;
  }[];
  offer_documents?: {
    name?: string;
    type?: string;
    document?: string;
  }[];
  pitch?: {
    name?: string;
    description?: string;
    land_types?: string[];
    land_ownerships?: string[];
    land_size?: string;
    land_continent?: string;
    land_country?: string;
    land_geojson?: string;
    restoration_methods?: string[];
    restoration_goals?: string[];
    funding_sources?: string[];
    funding_amount?: number;
    funding_bracket?: string;
    revenue_drivers?: string[];
    estimated_timespan?: number;
    long_term_engagement?: boolean;
    reporting_frequency?: string;
    reporting_level?: string;
    sustainable_development_goals?: string[];
    cover_photo?: string;
    video?: string;
    problem?: string;
    anticipated_outcome?: string;
    who_is_involved?: string;
    local_community_involvement?: boolean;
    training_involved?: boolean;
    training_type?: string;
    training_amount_people?: number;
    people_working_in?: string;
    people_amount_nearby?: number;
    people_amount_abroad?: number;
    people_amount_employees?: number;
    people_amount_volunteers?: number;
    benefited_people?: number;
    future_maintenance?: string;
    use_of_resources?: string;
  };
  pitch_contacts?: {
    user_id?: number;
    team_member_id?: number;
  }[];
  pitch_documents?: {
    name?: string;
    type?: string;
    document?: string;
  }[];
  carbon_certifications?: {
    type?: string;
    other_value?: string;
    link?: string;
  }[];
  restoration_method_metrics?: {
    restoration_method?: string;
    experience?: number;
    /**
     * @format float
     */
    land_size?: number;
    /**
     * @format float
     */
    price_per_hectare?: number;
    /**
     * @format float
     */
    biomass_per_hectare?: number;
    /**
     * @format float
     */
    carbon_impact?: number;
    species_impacted?: string[];
  }[];
  tree_species?: {
    name?: string;
    is_native?: boolean;
    count?: number;
    /**
     * @format float
     */
    price_to_plant?: number;
    /**
     * @format float
     */
    price_to_maintain?: number;
    /**
     * @format float
     */
    saplings?: number;
    /**
     * @format float
     */
    site_prep?: number;
    survival_rate?: number;
    produces_food?: boolean;
    produces_firewood?: boolean;
    produces_timber?: boolean;
    owner?: string;
    season?: string;
  }[];
};

export type DraftDataReadTreeSpecies = {
  name?: string;
  is_native?: boolean;
  count?: number;
  /**
   * @format float
   */
  price_to_plant?: number;
  /**
   * @format float
   */
  price_to_maintain?: number;
  /**
   * @format float
   */
  saplings?: number;
  /**
   * @format float
   */
  site_prep?: number;
  survival_rate?: number;
  produces_food?: boolean;
  produces_firewood?: boolean;
  produces_timber?: boolean;
  owner?: string;
  season?: string;
};

export type DraftDataReadOfferContacts = {
  user_id?: number;
  team_member_id?: number;
};

export type DraftDataReadOfferDocuments = {
  name?: string;
  type?: string;
  document?: string;
};

export type DraftDataReadPitchDocuments = {
  name?: string;
  type?: string;
  document?: string;
};

export type DraftDataReadCarbonCertifications = {
  type?: string;
  other_value?: string;
  link?: string;
};

export type DraftDataReadRestorationMethodMetrics = {
  restoration_method?: string;
  experience?: number;
  /**
   * @format float
   */
  land_size?: number;
  /**
   * @format float
   */
  price_per_hectare?: number;
  /**
   * @format float
   */
  biomass_per_hectare?: number;
  /**
   * @format float
   */
  carbon_impact?: number;
  species_impacted?: string[];
};

export type DraftDataReadPitchContacts = {
  user_id?: number;
  team_member_id?: number;
};

export type DraftDataReadPitch = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  land_geojson?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  revenue_drivers?: string[];
  estimated_timespan?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: string;
  video?: string;
  problem?: string;
  anticipated_outcome?: string;
  who_is_involved?: string;
  local_community_involvement?: boolean;
  training_involved?: boolean;
  training_type?: string;
  training_amount_people?: number;
  people_working_in?: string;
  people_amount_nearby?: number;
  people_amount_abroad?: number;
  people_amount_employees?: number;
  people_amount_volunteers?: number;
  benefited_people?: number;
  future_maintenance?: string;
  use_of_resources?: string;
};

export type DraftDataReadOffer = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  /**
   * @format float
   */
  price_per_tree?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: string;
  video?: string;
};

export type DraftRead = {
  id?: number;
  name?: string;
  type?: string;
  is_from_mobile?: boolean;
  completed_elsewhere?: boolean;
  data?: DraftDataRead;
  /**
   * @format date-time
   */
  created_at?: string;
  created_by?: number;
  /**
   * @format date-time
   */
  updated_at?: string;
  updated_by?: number;
};

export type DraftUpdate = {
  op?: string;
  path?: string;
  value?: string;
};

export type DraftUpdateAll = DraftUpdate[];

export type DraftReadAll = DraftRead[];

export type ElevatorVideoRead = {
  id?: number;
  upload_id?: number;
  preview?: string;
  status?: string;
  /**
   * @format date-time
   */
  uploaded_at?: string;
};

export type ElevatorVideoCreate = {
  introduction?: number;
  aims?: number;
  importance?: number;
};

export type DeviceReadAll = DeviceRead[];

export type DeviceRead = {
  id?: number;
  user_id?: number;
  os?: string;
  uuid?: string;
  push_token?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type DeviceCreate = {
  os?: string;
  uuid?: string;
  push_token?: string;
};

export type DeviceUpdate = {
  uuid?: string;
  push_token?: string;
};

export type MatchReadAll = MatchRead[];

export type MatchRead = {
  id?: number;
  offer_id?: number;
  offer_name?: string;
  offer_interest_id?: number;
  offer_contacts?: MatchOfferContactRead[];
  pitch_id?: number;
  pitch_name?: string;
  pitch_interest_id?: number;
  pitch_contacts?: MatchPitchContactRead[];
  monitoring_id?: number;
  /**
   * @format date-time
   */
  matched_at?: string;
};

export type MatchPitchContactRead = {
  id?: number;
  model?: string;
  pitch_id?: number;
  first_name?: string;
  last_name?: string;
  avatar?: string;
  email_address?: string;
  phone_number?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
};

export type MatchOfferContactRead = {
  id?: number;
  model?: string;
  offer_id?: number;
  first_name?: string;
  last_name?: string;
  avatar?: string;
  email_address?: string;
  phone_number?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
};

export type CarbonCertificationCreate = {
  pitch_id?: number;
  type?: string;
  other_value?: string;
  link?: string;
};

export type CarbonCertificationRead = {
  id?: number;
  pitch_id?: number;
  type?: string;
  other_value?: string;
  link?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type CarbonCertificationReadAll = CarbonCertificationRead[];

export type CarbonCertificationUpdate = {
  type?: string;
  other_value?: string;
  link?: string;
};

export type NotificationRead = {
  id?: number;
  user_id?: number;
  title?: string;
  body?: string;
  action?: string;
  referenced_model?: string;
  referenced_model_id?: number;
  unread?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type NotificationReadAll = NotificationRead[];

export type CarbonCertificationVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: CarbonCertificationRead;
};

export type CarbonCertificationVersionReadAll = CarbonCertificationVersionRead[];

export type CarbonCertificationVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type FundingBracketReadAll = {
  name?: string;
  bracket?: string;
}[];

export type PitchDocumentCreate = {
  pitch_id?: number;
  name?: string;
  type?: string;
  document?: number;
};

export type PitchDocumentRead = {
  id?: number;
  pitch_id?: number;
  name?: string;
  type?: string;
  document?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type PitchDocumentReadAll = PitchDocumentRead[];

export type PitchDocumentUpdate = {
  name?: string;
  type?: string;
  document?: number;
};

export type PitchDocumentVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: PitchDocumentRead;
};

export type PitchDocumentVersionReadAll = PitchDocumentVersionRead[];

export type PitchDocumentVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type RestorationMethodMetricCreate = {
  pitch_id?: number;
  restoration_method?: string;
  experience?: number;
  /**
   * @format float
   */
  land_size?: number;
  /**
   * @format float
   */
  price_per_hectare?: number;
  /**
   * @format float
   */
  biomass_per_hectare?: number;
  /**
   * @format float
   */
  carbon_impact?: number;
  species_impacted?: string[];
};

export type RestorationMethodMetricRead = {
  id?: number;
  pitch_id?: number;
  restoration_method?: string;
  experience?: number;
  /**
   * @format float
   */
  land_size?: number;
  /**
   * @format float
   */
  price_per_hectare?: number;
  /**
   * @format float
   */
  biomass_per_hectare?: number;
  /**
   * @format float
   */
  carbon_impact?: number;
  species_impacted?: string[];
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type RestorationMethodMetricReadAll = RestorationMethodMetricRead[];

export type RestorationMethodMetricUpdate = {
  restoration_method?: string;
  experience?: number;
  /**
   * @format float
   */
  land_size?: number;
  /**
   * @format float
   */
  price_per_hectare?: number;
  /**
   * @format float
   */
  biomass_per_hectare?: number;
  /**
   * @format float
   */
  carbon_impact?: number;
  species_impacted?: string[];
};

export type RestorationMethodMetricVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: RestorationMethodMetricRead;
};

export type RestorationMethodMetricVersionReadAll = RestorationMethodMetricVersionRead[];

export type RestorationMethodMetricVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type TreeSpeciesCreate = {
  pitch_id?: number;
  name?: string;
  is_native?: boolean;
  count?: number;
  /**
   * @format float
   */
  price_to_plant?: number;
  /**
   * @format float
   */
  price_to_maintain?: number;
  /**
   * @format float
   */
  saplings?: number;
  /**
   * @format float
   */
  site_prep?: number;
  survival_rate?: number;
  produces_food?: boolean;
  produces_firewood?: boolean;
  produces_timber?: boolean;
  owner?: string;
  season?: string;
};

export type CustomReportCreate = {
  /**
   * this is for future use, currently only csv's are generated.
   */
  format?: string;
  /**
   * currently only programme, site, submission and site_submissions are supported
   */
  exportable_type?: string;
  exportable_id?: number;
  /**
   * list of the columns and file collections you want returned in the zip file
   */
  field_list?: string[];
  /**
   * the number of months you wish to restrict the report by. eg 3, 6 or 9. ommiting this will return everything. this is currently only relevant for submissions belonging to the site or programme.
   */
  duration?: number;
};

export type TreeSpeciesRead = {
  id?: number;
  pitch_id?: number;
  name?: string;
  is_native?: boolean;
  count?: number;
  /**
   * @format float
   */
  price_to_plant?: number;
  /**
   * @format float
   */
  price_to_maintain?: number;
  /**
   * @format float
   */
  saplings?: number;
  /**
   * @format float
   */
  site_prep?: number;
  survival_rate?: number;
  produces_food?: boolean;
  produces_firewood?: boolean;
  produces_timber?: boolean;
  owner?: string;
  season?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TreeSpeciesReadAll = TreeSpeciesRead[];

export type TreeSpeciesUpdate = {
  name?: string;
  is_native?: boolean;
  count?: number;
  /**
   * @format float
   */
  price_to_plant?: number;
  /**
   * @format float
   */
  price_to_maintain?: number;
  /**
   * @format float
   */
  saplings?: number;
  /**
   * @format float
   */
  site_prep?: number;
  survival_rate?: number;
  produces_food?: boolean;
  produces_firewood?: boolean;
  produces_timber?: boolean;
  owner?: string;
  season?: string;
};

export type TreeSpeciesVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: TreeSpeciesRead;
};

export type TreeSpeciesVersionReadAll = TreeSpeciesVersionRead[];

export type TreeSpeciesVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type FilterSearch = {
  page?: number;
  sortAttribute?: "created_at" | "compatibility_score";
  sortDirection?: "asc" | "desc";
  filters?: FilterCondition[];
};

export type FilterCondition = {
  attribute?:
    | "land_types"
    | "land_ownerships"
    | "land_size"
    | "land_continent"
    | "restoration_methods"
    | "restoration_goals"
    | "funding_sources"
    | "funding_bracket"
    | "reporting_frequency"
    | "reporting_level"
    | "sustainable_development_goals"
    | "price_per_tree";
  operator?: "contains" | "in" | "between" | "boolean";
  value?: string[];
};

export type PitchCreate = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  land_geojson?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  revenue_drivers?: string[];
  estimated_timespan?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: number;
  video?: number;
  problem?: string;
  anticipated_outcome?: string;
  who_is_involved?: string;
  local_community_involvement?: boolean;
  training_involved?: boolean;
  training_type?: string;
  training_amount_people?: number;
  people_working_in?: string;
  people_amount_nearby?: number;
  people_amount_abroad?: number;
  people_amount_employees?: number;
  people_amount_volunteers?: number;
  benefited_people?: number;
  future_maintenance?: string;
  use_of_resources?: string;
};

export type PitchRead = {
  id?: number;
  organisation_id?: number;
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  land_geojson?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  revenue_drivers?: string[];
  estimated_timespan?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  avatar?: string;
  cover_photo?: string;
  video?: string;
  problem?: string;
  anticipated_outcome?: string;
  who_is_involved?: string;
  local_community_involvement?: boolean;
  training_involved?: boolean;
  training_type?: string;
  training_amount_people?: number;
  people_working_in?: string;
  people_amount_nearby?: number;
  people_amount_abroad?: number;
  people_amount_employees?: number;
  people_amount_volunteers?: number;
  benefited_people?: number;
  future_maintenance?: string;
  use_of_resources?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  successful?: boolean;
  compatibility_score?: number;
  /**
   * @format float
   */
  price_per_tree?: number;
  visibility?: string;
};

export type PitchReadAll = PitchRead[];

export type PitchUpdate = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  land_geojson?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  revenue_drivers?: string[];
  estimated_timespan?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: number;
  video?: number;
  problem?: string;
  anticipated_outcome?: string;
  who_is_involved?: string;
  local_community_involvement?: boolean;
  training_involved?: boolean;
  training_type?: string;
  training_amount_people?: number;
  people_working_in?: string;
  people_amount_nearby?: number;
  people_amount_abroad?: number;
  people_amount_employees?: number;
  people_amount_volunteers?: number;
  benefited_people?: number;
  future_maintenance?: string;
  use_of_resources?: string;
};

export type PitchVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: PitchRead;
};

export type PitchVersionReadAll = PitchVersionRead[];

export type PitchVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type Empty = Record<string, any>;

export type VisibilityReadAll = {
  name?: string;
  visibility?: string;
}[];

export type RevenueDriverReadAll = {
  name?: string;
  driver?: string;
}[];

export type LandTypeReadAll = {
  name?: string;
  type?: string;
}[];

export type RestorationMethodReadAll = {
  name?: string;
  method?: string;
}[];

export type OfferCreate = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  /**
   * @format float
   */
  price_per_tree?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: number;
  video?: number;
};

export type OfferUpdate = {
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  /**
   * @format float
   */
  price_per_tree?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: number;
  video?: number;
};

export type OfferRead = {
  id?: number;
  organisation_id?: number;
  name?: string;
  description?: string;
  land_types?: string[];
  land_ownerships?: string[];
  land_size?: string;
  land_continent?: string;
  land_country?: string;
  restoration_methods?: string[];
  restoration_goals?: string[];
  funding_sources?: string[];
  funding_amount?: number;
  funding_bracket?: string;
  /**
   * @format float
   */
  price_per_tree?: number;
  long_term_engagement?: boolean;
  reporting_frequency?: string;
  reporting_level?: string;
  sustainable_development_goals?: string[];
  cover_photo?: string;
  avatar?: string;
  video?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  successful?: boolean;
  compatibility_score?: number;
  visibility?: string;
};

export type OfferReadAll = OfferRead[];

export type PitchContactCreate = {
  pitch_id?: number;
  user_id?: number;
  team_member_id?: number;
};

export type PitchContactRead = {
  id?: number;
  team_member_id?: number;
  user_id?: number;
  pitch_id?: number;
  first_name?: string;
  last_name?: string;
  avatar?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
};

export type PitchContactReadAll = PitchContactRead[];

export type PitchByContinentReadAll = {
  land_continent?: string;
  count?: number;
}[];

export type InterestCreate = {
  initiator?: string;
  offer_id?: number;
  pitch_id?: number;
};

export type InterestRead = {
  id?: number;
  organisation_id?: number;
  initiator?: string;
  offer_id?: number;
  pitch_id?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type InterestReadAll = InterestRead[];

export type OfferContactCreate = {
  offer_id?: number;
  user_id?: number;
  team_member_id?: number;
};

export type OfferContactRead = {
  id?: number;
  team_member_id?: number;
  user_id?: number;
  offer_id?: number;
  first_name?: string;
  last_name?: string;
  avatar?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
};

export type OfferContactReadAll = OfferContactRead[];

export type OfferDocumentCreate = {
  offer_id?: number;
  name?: string;
  type?: string;
  document?: number;
};

export type OfferDocumentUpdate = {
  name?: string;
  type?: string;
  document?: number;
};

export type OfferDocumentRead = {
  id?: number;
  offer_id?: number;
  name?: string;
  type?: string;
  document?: string;
};

export type OfferDocumentReadAll = OfferDocumentRead[];

export type TeamMemberCreate = {
  first_name?: string;
  last_name?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: number;
  email_address?: string;
  phone_number?: string;
};

export type TeamMemberUpdate = {
  first_name?: string;
  last_name?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: number;
  email_address?: string;
  phone_number?: string;
};

export type TeamMemberRead = {
  id?: number;
  organisation_id?: number;
  first_name?: string;
  last_name?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
  email_address?: string;
  phone_number?: string;
};

export type TeamMemberReadAll = TeamMemberRead[];

export type MaskedTeamMemberRead = {
  id?: number;
  organisation_id?: number;
  first_name?: string;
  last_name?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
};

export type MaskedTeamMemberReadAll = MaskedTeamMemberRead[];

export type TokenRead = {
  token?: string;
};

export type UploadCreate = {
  id?: number;
  /**
   * @format date-time
   */
  uploaded_at?: string;
};

export type UploadSocioEconomicBenefits = {
  upload?: number;
  name?: string;
  programme_id?: number;
  programme_submission_id?: number;
  site_id?: number;
  site_submission_id?: number;
};

export type UploadSocioEconomicBenefitsRead = {
  id?: number;
  upload?: number;
  name?: string;
  programme_id?: number;
  programme_submission_id?: number;
  site_id?: number;
  site_submission_id?: number;
  /**
   * @format date-time
   */
  uploaded_at?: string;
};

export type UploadMedia = {
  is_public?: boolean;
  programme_id?: number;
  site_id?: number;
  upload?: number;
  location_long?: number;
  location_lat?: number;
};

export type UploadMediaRead = {
  id?: number;
  type?: string;
  is_public?: boolean;
  programme_id?: number;
  site_id?: number;
  upload?: string;
  location_long?: number;
  location_lat?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type UploadMediaReadAll = UploadMediaRead[];

export type CountryReadAll = {
  name?: string;
  code?: string;
  continent?: string;
}[];

export type OrganisationCategoryReadAll = {
  name?: string;
  category?: string;
}[];

export type AuthReset = {
  email_address?: string;
  callback_url?: string;
};

export type AuthVerify = {
  token?: string;
};

export type AuthChange = {
  token?: string;
  password?: string;
};

export type AuthLogIn = {
  /**
   * @format email
   */
  email_address?: string;
  password?: string;
};

export type UserCreate = {
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  phone_number?: string;
  whatsapp_phone?: string;
  callback_url?: string;
};

export type UserAccept = {
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  phone_number?: string;
  whatsapp_phone?: string;
  callback_url?: string;
};

export type UserInvite = {
  email_address?: string;
};

export type UserRead = {
  id?: number;
  organisation_id?: number;
  organisation_name?: string;
  my_organisation?: V2AdminOrganisationRead;
  my_monitoring_organisations?: V2MonitoringOrganisationRead[];
  first_name?: string;
  last_name?: string;
  email_address?: string;
  /**
   * @format date-time
   */
  email_address_verified_at?: string;
  role?: string;
  /**
   * @format date-time
   */
  last_logged_in_at?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
  phone_number?: string;
  whatsapp_phone?: string;
  has_ppc_projects?: boolean;
  has_terrafund_projects?: boolean;
};

export type UserResend = {
  uuid?: string;
  callback_url?: string;
};

export type MaskedUserRead = {
  id?: number;
  organisation_id?: number;
  first_name?: string;
  last_name?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
};

export type MaskedUserReadAll = MaskedUserRead[];

export type UserReadAllPaginated = {
  data?: UserReadAll;
  meta?: {
    first?: number;
    current?: number;
    last?: number;
    total?: number;
  };
};

export type SiteReadAllPaginated = {
  data?: SiteReadAll;
  meta?: {
    first?: number;
    current?: number;
    last?: number;
    total?: number;
  };
};

export type FormPaginated = {
  data?: FormRead[];
  links?: {
    first?: string;
    last?: string;
    prev?: string;
    next?: string;
  };
  meta?: {
    current_page?: number;
    from?: number;
    last_page?: number;
    next?: number;
  };
};

export type StagePaginated = {
  data?: StageRead;
  links?: {
    first?: string;
    last?: string;
    prev?: string;
    next?: string;
  };
  meta?: {
    current_page?: number;
    from?: number;
    last_page?: number;
    next?: number;
  };
};

export type UserReadAll = UserRead[];

export type UserUpdate = {
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: number;
  phone_number?: string;
  callback_url?: string;
};

export type AdminAccept = {
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
};

export type AdminInvite = {
  email_address?: string;
};

export type AdminRead = {
  id?: number;
  first_name?: string;
  last_name?: string;
  email_address?: string;
  /**
   * @format date-time
   */
  email_address_verified_at?: string;
  role?: string;
  /**
   * @format date-time
   */
  last_logged_in_at?: string;
  job_role?: string;
  whatsapp_phone?: string;
  avatar?: string;
};

export type AdminReadAll = AdminRead[];

export type AdminUpdate = {
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
  avatar?: number;
};

export type OrganisationCreate = {
  name?: string;
  description?: string;
  address_1?: string;
  address_2?: string;
  city?: string;
  state?: string;
  zip_code?: string;
  country?: string;
  phone_number?: string;
  full_time_permanent_employees?: number;
  seasonal_employees?: number;
  part_time_permanent_employees?: number;
  percentage_female?: number;
  percentage_male?: number;
  percentage_youth?: number;
  website?: string;
  type?: string;
  account_type?: string;
  category?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: number;
  cover_photo?: number;
  video?: number;
  /**
   * @format date
   */
  founded_at?: string;
  /**
   * @format float
   */
  revenues_19?: number;
  /**
   * @format float
   */
  revenues_20?: number;
  /**
   * @format float
   */
  revenues_21?: number;
  /**
   * @format float
   */
  ["budget_21 "]?: number;
  letter_of_reference?: number;
  community_engagement_strategy?: string;
  three_year_community_engagement?: string;
  women_farmer_engagement?: number;
  young_people_engagement?: number;
  monitoring_and_evaluation_experience?: string;
  community_follow_up?: string;
  total_hectares_restored?: number;
  total_trees_grown?: number;
  tree_survival_rate?: number;
  hectares_restored_three_years?: number;
  tree_maintenance_and_aftercare?: string;
  key_contact?: string;
};

export type MaskedOrganisationRead = {
  id?: number;
  name?: string;
  description?: string;
  city?: string;
  state?: string;
  country?: string;
  website?: string;
  type?: string;
  category?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
  cover_photo?: string;
  video?: string;
  /**
   * @format date
   */
  founded_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  community_engagement_strategy?: string;
  three_year_community_engagement?: string;
  women_farmer_engagement?: number;
  young_people_engagement?: number;
  monitoring_and_evaluation_experience?: string;
  community_follow_up?: string;
  total_hectares_restored?: number;
  total_trees_grown?: number;
  tree_survival_rate?: number;
  hectares_restored_three_years?: number;
  tree_maintenance_and_aftercare?: string;
  full_time_permanent_employees?: number;
  seasonal_employees?: number;
  part_time_permanent_employees?: number;
  percentage_female?: number;
  percentage_youth?: number;
  key_contact?: string;
};

export type OrganisationRead = {
  id?: number;
  name?: string;
  description?: string;
  address_1?: string;
  address_2?: string;
  account_type?: string;
  city?: string;
  state?: string;
  zip_code?: string;
  country?: string;
  phone_number?: string;
  website?: string;
  type?: string;
  category?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
  cover_photo?: string;
  video?: string;
  /**
   * @format date
   */
  founded_at?: string;
  /**
   * @format float
   */
  revenues_19?: number;
  /**
   * @format float
   */
  revenues_20?: number;
  /**
   * @format date
   */
  revenues_21?: number;
  /**
   * @format float
   */
  budget_21?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  community_engagement_strategy?: string;
  three_year_community_engagement?: string;
  women_farmer_engagement?: number;
  young_people_engagement?: number;
  monitoring_and_evaluation_experience?: string;
  community_follow_up?: string;
  letter_of_reference?: number;
  total_hectares_restored?: number;
  total_trees_grown?: number;
  tree_survival_rate?: number;
  hectares_restored_three_years?: number;
  tree_maintenance_and_aftercare?: string;
  full_time_permanent_employees?: number;
  seasonal_employees?: number;
  part_time_permanent_employees?: number;
  percentage_female?: number;
  percentage_youth?: number;
  photos?: OrganisationPhotoReadAll;
  files?: OrganisationFileReadAll;
  key_contact?: string;
};

export type OrganisationReadAll = OrganisationRead[];

export type OrganisationUpdate = {
  name?: string;
  description?: string;
  address_1?: string;
  address_2?: string;
  city?: string;
  state?: string;
  zip_code?: string;
  country?: string;
  phone_number?: string;
  website?: string;
  type?: string;
  category?: string;
  facebook?: string;
  twitter?: string;
  instagram?: string;
  linkedin?: string;
  avatar?: string;
  cover_photo?: string;
  video?: string;
  /**
   * @format date
   */
  founded_at?: string;
  /**
   * @format float
   */
  revenues_19?: number;
  /**
   * @format float
   */
  revenues_20?: number;
  /**
   * @format date
   */
  revenues_21?: number;
  /**
   * @format float
   */
  budget_21?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  community_engagement_strategy?: string;
  three_year_community_engagement?: string;
  women_farmer_engagement?: number;
  young_people_engagement?: number;
  monitoring_and_evaluation_experience?: string;
  community_follow_up?: string;
  letter_of_reference?: number;
  total_hectares_restored?: number;
  total_trees_grown?: number;
  tree_survival_rate?: number;
  hectares_restored_three_years?: number;
  tree_maintenance_and_aftercare?: string;
  full_time_permanent_employees?: number;
  seasonal_employees?: number;
  part_time_permanent_employees?: number;
  percentage_female?: number;
  percentage_youth?: number;
};

export type OrganisationVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: OrganisationRead;
};

export type OrganisationVersionReadAll = OrganisationVersionRead[];

export type OrganisationVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type DocumentTypeReadAll = {
  name?: string;
  type?: string;
}[];

export type OrganisationDocumentCreate = {
  name?: string;
  type?: string;
  document?: number;
};

export type OrganisationDocumentRead = {
  id?: number;
  organisation_id?: number;
  name?: string;
  type?: string;
  document?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type OrganisationDocumentReadAll = OrganisationDocumentRead[];

export type OrganisationDocumentUpdate = {
  name?: string;
  type?: string;
  document?: number;
};

export type OrganisationDocumentVersionRead = {
  id?: number;
  status?: string;
  rejected_reason?: string;
  rejected_reason_body?: string;
  approved_rejected_by?: number;
  /**
   * @format date-time
   */
  approved_rejected_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  data?: OrganisationDocumentRead;
};

export type OrganisationDocumentVersionReadAll = OrganisationDocumentVersionRead[];

export type OrganisationDocumentVersionReject = {
  rejected_reason?: string;
  rejected_reason_body?: string;
};

export type MonitoringCreate = {
  match_id?: number;
};

export type MonitoringReadAll = MonitoringRead[];

export type MonitoringRead = {
  id?: number;
  match_id?: number;
  initiator?: string;
  stage?: string;
  negotiating?: string;
  pitch?: PitchRead;
  offer?: OfferRead;
  created_by?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SummarisedMonitoringRead = {
  attribute?: string;
  target?: number;
  progress_update?: number;
  /**
   * @format date-time
   */
  updated_at?: string;
}[];

export type TargetCreate = {
  monitoring_id?: number;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  finish_date?: string;
  funding_amount?: number;
  land_geojson?: string;
  data?: {
    trees_planted?: number;
    non_trees_planted?: number;
    survival_rate?: number;
    /**
     * @format float
     */
    land_size_planted?: number;
    /**
     * @format float
     */
    land_size_restored?: number;
    carbon_captured?: number;
    supported_nurseries?: number;
    nurseries_production_amount?: number;
    short_term_jobs_amount?: number;
    long_term_jobs_amount?: number;
    volunteers_amount?: number;
    training_amount?: number;
    benefited_people?: number;
  };
};

export type TargetReadAll = TargetRead[];

export type TargetRead = {
  id?: number;
  monitoring_id?: number;
  negotiator?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  finish_date?: string;
  funding_amount?: number;
  land_geojson?: string;
  data?: {
    trees_planted?: number;
    non_trees_planted?: number;
    survival_rate?: number;
    /**
     * @format float
     */
    land_size_planted?: number;
    /**
     * @format float
     */
    land_size_restored?: number;
    carbon_captured?: number;
    supported_nurseries?: number;
    nurseries_production_amount?: number;
    short_term_jobs_amount?: number;
    long_term_jobs_amount?: number;
    volunteers_amount?: number;
    training_amount?: number;
    benefited_people?: number;
  };
  /**
   * @format date-time
   */
  created_at?: string;
  created_by?: number;
  /**
   * @format date-time
   */
  updated_at?: string;
  /**
   * @format date-time
   */
  accepted_at?: string;
  accepted_by?: number;
};

export type ProgressUpdateCreate = {
  monitoring_id?: number;
  grouping?: "general" | "planting" | "monitoring";
  title?: string;
  breakdown?: string;
  summary?: string;
  data?: {
    /**
     * @format date
     */
    planting_date?: string;
    trees_planted?: {
      name?: string;
      value?: number;
    }[];
    non_trees_planted?: {
      name?: string;
      value?: number;
    }[];
    survival_amount?: {
      name?: string;
      value?: number;
    }[];
    supported_nurseries?: number;
    survival_rate?: number;
    carbon_captured?: number;
    nurseries_production_amount?: number;
    /**
     * @format float
     */
    land_size_planted?: number;
    /**
     * @format float
     */
    land_size_restored?: number;
    short_term_jobs_amount?: {
      male?: number;
      female?: number;
    };
    long_term_jobs_amount?: {
      male?: number;
      female?: number;
    };
    volunteers_amount?: {
      male?: number;
      female?: number;
    };
    training_amount?: {
      male?: number;
      female?: number;
    };
    benefited_people?: {
      male?: number;
      female?: number;
    };
    mortality_causes?: string;
    challenges_update?: string;
    insights_update?: string;
    biodiversity_update?: string;
  };
  images?: {
    image?: number;
    caption?: string;
  }[];
};

export type ProgressUpdateReadAll = ProgressUpdateRead[];

export type ProgressUpdateRead = {
  id?: number;
  monitoring_id?: number;
  grouping?: "general" | "planting" | "monitoring";
  title?: string;
  breakdown?: string;
  summary?: string;
  data?: {
    /**
     * @format date
     */
    planting_date?: string;
    trees_planted?: {
      name?: string;
      value?: number;
    }[];
    trees_planted_total?: number;
    non_trees_planted?: {
      name?: string;
      value?: number;
    }[];
    non_trees_planted_total?: number;
    survival_amount?: {
      name?: string;
      value?: number;
    }[];
    survival_amount_total?: number;
    supported_nurseries?: number;
    survival_rate?: number;
    carbon_captured?: number;
    nurseries_production_amount?: number;
    /**
     * @format float
     */
    land_size_planted?: number;
    /**
     * @format float
     */
    land_size_restored?: number;
    short_term_jobs_amount?: {
      male?: number;
      female?: number;
    };
    short_term_jobs_amount_total?: number;
    long_term_jobs_amount?: {
      male?: number;
      female?: number;
    };
    long_term_jobs_amount_total?: number;
    volunteers_amount?: {
      male?: number;
      female?: number;
    };
    volunteers_amount_total?: number;
    training_amount?: {
      male?: number;
      female?: number;
    };
    training_amount_total?: number;
    benefited_people?: {
      male?: number;
      female?: number;
    };
    benefited_people_total?: number;
    mortality_causes?: string;
    challenges_update?: string;
    insights_update?: string;
    biodiversity_update?: string;
  };
  images?: {
    image?: string;
    caption?: string;
    thumbnail?: string;
  }[];
  created_by?: number;
  created_by_admin?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SatelliteMonitorCreate = {
  satellite_monitorable_type?: string;
  satellite_monitorable_id?: number;
  map?: number;
  alt_text?: string;
};

export type SatelliteMonitorRead = {
  id?: number;
  satellite_monitorable_type?: string;
  satellite_monitorable_id?: number;
  map?: number;
  alt_text?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SatelliteMonitorReadAll = SatelliteMonitorRead[];

export type SatelliteMapCreate = {
  monitoring_id?: number;
  map?: number;
  alt_text?: string;
};

export type SatelliteMapRead = {
  id?: number;
  monitoring_id?: number;
  map?: number;
  alt_text?: string;
  created_by?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SatelliteMapReadAll = SatelliteMapRead[];

export type FrameworkCodeSubmit = {
  code?: string;
};

export type FrameworkCodeCreate = {
  code?: string;
  framework?: string;
};

export type SubmissionCreate = {
  title?: string;
  technical_narrative?: string;
  public_narrative?: string;
  created_by?: string;
};

export type SubmissionUpdate = {
  title?: string;
  technical_narrative?: string;
  public_narrative?: string;
  created_by?: string;
};

export type DirectSeedingSubmit = {
  name?: string;
  weight?: number;
};

export type DirectSeedingRead = {
  id?: number;
  site_submission_id?: number;
  name?: string;
  weight?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SubmissionRead = {
  id?: number;
  programme_id?: number;
  title?: string;
  technical_narrative?: string;
  public_narrative?: string;
  due_date?: string;
  workdays_paid?: number | null;
  workdays_volunteer?: number | null;
  total_workdays?: number;
  media?: SubmissionUploadMediaRead[];
  tree_species?: ProgrammeTreeSpeciesRead[];
  socioeconomic_benefits?: Record<string, any>;
  document_files?: DocumentFileRead[];
  status?: string;
  created_by?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SubmissionReadAll = SubmissionRead[];

export type ProgrammeOverviewRead = {
  id?: number;
  framework_id?: number;
  organisation_id?: number;
  submissions?: SubmissionRead[];
  boundary_geojson?: string;
  number_of_sites?: number;
  workdays_paid?: number;
  workdays_volunteer?: number;
  total_workdays?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ProgrammeSubmit = {
  name?: string;
  country?: string;
  continent?: string;
  /**
   * @format date
   */
  end_date?: string;
};

export type ProgrammeRead = {
  id?: number;
  name?: string;
  country?: string;
  continent?: string;
  thumbnail?: string;
  boundary_geojson?: string;
  /**
   * @format date
   */
  end_date?: string;
  framework_id?: number;
  organisation_id?: number;
  submissions?: SubmissionRead[];
  baseline_monitoring?: ProjectMetricRead;
  next_due_submission_id?: number;
  /**
   * @format date
   */
  next_due_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type FundingProgramme = {
  id?: number;
  uuid?: string;
  name?: string;
  description?: string;
  location?: string;
  read_more_url?: string;
  status?: string;
  organisation_types?: string[];
  stages?: StageRead[];
  organisations?: {
    uuid?: string;
    name?: string;
  }[];
  cover?: V2FileRead;
  deleted_at?: string;
  created_at?: string;
  updated_at?: string;
};

export type LimitedFundingProgrammeRead = {
  id?: number;
  uuid?: string;
  name?: string;
  description?: string;
  location?: string;
  organisation_types?: string[];
  read_more_url?: string;
  status?: string;
};

export type FundingProgrammeStatus = {
  status?: string;
};

export type FundingProgrammeCreate = {
  name?: string;
  description?: string;
  location?: string;
  read_more_url?: string;
  organisation_types?: string[];
  cover?: V2FileRead;
  status?: string;
};

export type TerrafundProgrammeRead = {
  id?: number;
  home_country?: string;
  project_country?: string;
  boundary_geojson?: string;
  name?: string;
  description?: string;
  /**
   * @format date
   */
  planting_start_date?: string;
  /**
   * @format date
   */
  planting_end_date?: string;
  budget?: number;
  programme_type?: string;
  status?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  history?: string;
  objectives?: string;
  environmental_goals?: string;
  socioeconomic_goals?: string;
  sdgs_impacted?: string;
  community_incentives?: string;
  total_hectares_restored?: number;
  baseline_monitoring?: ProjectMetricRead;
  additional_files?: TerrafundFileReadAll[];
  tree_species?: TerrafundTreeSpeciesReadAll[];
  organisation_id?: number;
  next_due_submission?: TerrafundDueSubmissionRead;
  next_due_at?: string;
};

export type ProgrammeReadAll = ProgrammeRead[];

export type TerrafundProgrammeReadAll = TerrafundProgrammeRead[];

export type FrameworkCodeReadAll = FrameworkCodeRead[];

export type FrameworkCodeRead = {
  id?: number;
  code?: string;
  framework_id?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ProgrammeTreeSpeciesSearchAll = {
  data?: ProgrammeTreeSpeciesSearchRead;
};

export type ProgrammeTreeSpeciesSearchRead = string[];

export type ProgrammeTreeSpeciesSearch = {
  search_term?: string;
};

export type ProgrammeTreeSpeciesSubmit = {
  name?: string;
  programme_id?: number;
};

export type ProgrammeTreeSpeciesRead = {
  id?: number;
  programme_id?: number;
  name?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type TreeSpeciesBulkSubmit = {
  name?: string;
};

export type TreeSpeciesWithAmountBulkSubmit = {
  name?: string;
  amount?: number;
};

export type BaseProgrammeTreeSpeciesRead = {
  id?: number;
  programme_id?: number;
  name?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type ProgrammeTreeSpeciesReadAll = ProgrammeTreeSpeciesRead[];

export type BaseProgrammeTreeSpeciesReadAll = BaseProgrammeTreeSpeciesRead[];

export type ProgrammeAllTreeSpeciesReadAll = {
  programme_id?: number;
  trees?: BaseProgrammeTreeSpeciesReadAll;
};

export type SiteAllTreeSpeciesReadAll = {
  site_id?: number;
  trees?: BaseSiteTreeSpeciesReadAll;
};

export type AllProgrammesTreeSpecies = ProgrammeAllTreeSpeciesReadAll[];

export type AllSiteTreeSpecies = SiteAllTreeSpeciesReadAll[];

export type ProgrammeTreeSpeciesCsvRead = {
  id?: number;
  status?: string;
  programme_id?: number;
  total_rows?: number;
  completed_rows?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ProgrammeTreeSpeciesCsvSubmit = {
  upload_id?: number;
  programme_id?: number;
};

export type SiteTreeSpeciesCsvRead = {
  id?: number;
  site_id?: number;
  total_rows?: number;
  completed_rows?: number;
  has_failed?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SiteTreeSpeciesCsvSubmit = {
  upload_id?: number;
  programme_id?: number;
};

export type SiteTreeSpeciesManualRead = {
  id?: number;
  site_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SiteTreeSpeciesRead = {
  id?: number;
  site_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type BaseSiteTreeSpeciesRead = {
  id?: number;
  site_id?: number;
  name?: string;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type BaseSiteTreeSpeciesReadAll = BaseSiteTreeSpeciesRead[];

export type SiteTreeSpeciesReadAll = SiteTreeSpeciesRead[];

export type SeedDetailReadAll = SeedDetailRead[];

export type InvasiveReadAll = InvasiveRead[];

export type SubmissionTreeSpeciesCsvRead = {
  id?: number;
  submission_id?: number;
  total_rows?: number;
  completed_rows?: number;
  has_failed?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SubmissionTreeSpeciesManualRead = {
  id?: number;
  submission_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SubmissionreeSpeciesRead = {
  id?: number;
  submission_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SubmissionTreeSpeciesReadAll = SubmissionTreeSpeciesRead[];

export type SubmissionTreeSpeciesRead = {
  id?: number;
  submission_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SubmissionTreeSpeciesManualSubmit = {
  submission_id?: number;
  name?: string;
  amount?: number;
};

export type SubmissionUploadMedia = {
  is_public?: boolean;
  submission_id?: number;
  site_submission_id?: number;
  upload?: number;
  location_long?: number;
  location_lat?: number;
};

export type SubmissionUploadMediaRead = {
  id?: number;
  is_public?: boolean;
  submission_id?: number;
  site_submission_id?: number;
  upload?: string;
  location_long?: number;
  location_lat?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type SubmissionTreeSpeciesCsvSubmit = {
  file?: number;
};

export type ProgrammeTargetsSubmit = {
  year_five_trees?: number;
  restoration_hectares?: number;
  survival_rate?: number;
  year_five_crown_cover?: number;
};

export type ProgrammeTargetsRead = {
  id?: number;
  programme_id?: number;
  year_five_trees?: number;
  restoration_hectares?: number;
  survival_rate?: number;
  year_five_crown_cover?: number;
  submitted_tree_count?: number;
};

export type SiteCreateSubmit = {
  programme_id?: number;
  site_name?: string;
  site_description?: string;
  site_history?: string;
  control_site?: boolean;
  planting_pattern?: string;
  /**
   * @format date
   */
  end_date?: string;
  stratification_for_heterogeneity?: number;
};

export type SiteRead = {
  id?: number;
  programme_id?: number;
  name?: string;
  control_site?: boolean;
  /**
   * @format string
   */
  description?: string;
  country?: string;
  continent?: string;
  history?: string;
  workdays_paid?: number;
  planting_pattern?: string;
  /**
   * @format date
   */
  end_date?: string;
  /**
   * @format date
   */
  establishment_date?: string;
  land_tenures?: LandTenureReadAll[];
  restoration_methods?: SiteRestorationMethodReadAll[];
  aim_survival_rate?: number;
  aim_year_five_crown_cover?: number;
  aim_direct_seeding_survival_rate?: number;
  aim_natural_regeneration_trees_per_hectare?: number;
  aim_natural_regeneration_hectares?: number;
  aim_soil_condition?: string;
  aim_number_of_mature_trees?: number;
  boundary_geojson?: string;
  submissions?: SubmissionRead[];
  seeds?: SeedDetailReadAll[];
  invasives?: InvasiveReadAll[];
  next_due_submission_id?: number;
  /**
   * @format date
   */
  next_due_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  baseline_monitoring?: SiteMetricRead;
};

export type SeedDetailRead = {
  id?: number;
  site_id?: number;
  name?: string;
  weight_of_sample?: number;
  seeds_in_sample?: number;
  seeds_per_kg?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type InvasiveRead = {
  id?: number;
  site_id?: number;
  name?: string;
  type?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SiteSubmissionRead = {
  id?: number;
  site_id?: number;
  technical_narrative?: string;
  public_narrative?: string;
  disturbance_information?: string;
  due_date?: string;
  tree_species?: SiteTreeSpeciesReadAll[];
  disturbances?: SiteSubmissionDisturbanceReadAll[];
  socioeconomic_benefits?: Record<string, any>;
  media?: UploadMediaReadAll[];
  document_files?: DocumentFileRead[];
  workdays_paid?: number | null;
  workdays_volunteer?: number | null;
  total_workdays?: number;
  status?: string;
  created_by?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SiteSubmissionUpdate = {
  created_by?: string;
  disturbance_information?: number;
  direct_seeding_kg?: number;
};

export type DueSubmissionRead = {
  id?: number;
  due_submissionable_type?: string;
  due_submissionable_id?: number;
  is_submitted?: boolean;
  due_submissionable?: Record<string, any>;
  drafts?: DraftRead[];
  /**
   * @format date-time
   */
  due_at?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SiteSubmissionDisturbanceRead = {
  id?: number;
  site_submission_id?: number;
  disturbance_type?: string;
  intensity?: string;
  extent?: string;
  description?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type SiteSubmissionDisturbanceReadAll = {
  data?: SiteSubmissionDisturbanceRead[];
};

export type SiteSubmissionDisturbanceSubmit = {
  site_submission_id?: number;
  disturbance_type?: string;
  intensity?: string;
  extent?: string;
  description?: string;
};

export type SiteSubmissionDisturbanceUpdate = {
  disturbance_type?: string;
  intensity?: string;
  extent?: string;
  description?: string;
};

export type SiteSubmissionDisturbanceInformationSubmit = {
  site_submission_id?: number;
  disturbance_information?: string;
};

export type SiteSubmissionDisturbanceInformationUpdate = {
  disturbance_information?: string;
};

export type SiteAddBoundarySubmit = {
  site_id?: number;
  boundary_geojson?: string;
};

export type LandTenureReadAll = {
  id?: number;
  name?: string;
  key?: string;
}[];

export type SiteRestorationMethodReadAll = {
  id?: number;
  name?: string;
  key?: string;
}[];

export type SiteRestorationMethodsSubmit = {
  site_restoration_ids?: number[];
};

export type EstablishmentDateSubmit = {
  /**
   * @format date
   */
  establishment_date?: string;
};

export type SiteAimSubmit = {
  aim_survival_rate?: number;
  aim_year_five_crown_cover?: number;
  aim_direct_seeding_survival_rate?: number;
  aim_natural_regeneration_trees_per_hectare?: number;
  aim_natural_regeneration_hectares?: number;
  aim_soil_condition?: string;
  aim_number_of_mature_trees?: number;
};

export type SiteSubmissionSubmit = {
  site_id?: number;
  created_by?: string;
};

export type SeedDetailSubmit = {
  name?: string;
  total_kg?: number;
  weight_of_sample?: number;
  seeds_in_sample?: number;
};

export type InvasiveSubmit = {
  name?: string;
  type?: string;
};

export type LandTenureSubmit = {
  land_tenure_ids?: number[];
};

export type NarrativeSubmit = {
  technical_narrative?: string;
  public_narrative?: string;
};

export type NarrativeRead = Record<string, any>;

export type LandTenureRead = Record<string, any>;

export type SiteTreeSpeciesManualSubmit = {
  site_id?: number;
  name?: string;
  amount?: number;
};

export type ProgrammeInviteSubmit = {
  email_address?: string;
  callback_url?: string;
};

export type ProgrammeInviteRead = {
  id?: number;
  /**
   * @format email
   */
  email_address?: string;
  /**
   * @format date-time
   */
  accepted_at?: string;
  programme_id?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ProgrammeRemove = {
  user_id?: number;
  programme_id?: number;
};

export type ProgrammeAccept = {
  token?: string;
};

export type ProgrammeAddBoundary = {
  programme_id?: number;
  boundary_geojson?: string;
};

export type ProgrammeBoundary = {
  id?: number;
  name?: string;
  framework_id?: number;
  organisation_id?: number;
  boundary_geojson?: string;
};

export type SiteSubmissionReadAll = {
  data?: SiteSubmissionRead[];
};

export type DueSubmissionReadAll = DueSubmissionRead[];

export type SiteReadAll = SiteRead[];

export type SitePendingRead = {
  completed_submissions?: SiteSubmissionRead[];
  due_submissions?: DueSubmissionRead[];
};

export type ProgrammePendingRead = {
  completed_submissions?: SubmissionRead[];
  due_submissions?: DueSubmissionRead[];
};

export type DocumentFileCreate = {
  document_fileable_type?: "programme" | "nursery" | "site" | "nursery_submission" | "submission" | "site_submission";
  document_fileable_id?: number;
  title?: string;
  collection?: string;
  upload?: number;
  is_public?: boolean;
};

export type DocumentFileRead = {
  id?: number;
  uuid?: string;
  upload?: string;
  fileable_id?: string;
  type?: string;
  collection?: string;
  is_public?: boolean;
  created_at?: string;
};

export type TerrafundProgrammeCreate = {
  home_country?: string;
  project_country?: string;
  boundary_geojson?: string;
  name?: string;
  description?: string;
  /**
   * @format date
   */
  planting_start_date?: string;
  /**
   * @format date
   */
  planting_end_date?: string;
  budget?: string;
  programme_type?: string;
  status?: string;
  history?: string;
  objectives?: string;
  environmental_goals?: string;
  socioeconomic_goals?: string;
  sdgs_impacted?: string;
  long_term_growth?: string;
  community_incentives?: string;
  total_hectares_restored?: number;
  trees_planted?: number;
  jobs_created?: number;
};

export type TerrafundTreeSpeciesCreate = {
  name?: string;
  amount?: number;
  treeable_type: "programme" | "nursery";
  treeable_id: number;
};

export type TerrafundTreeSpeciesBulkCreate = {
  treeable_type: "programme" | "nursery";
  treeable_id: number;
  collection: TerrafundTreeSpeciesBulkPartial[];
};

export type TerrafundNonTreeSpeciesBulkCreate = {
  treeable_type: "site_submission";
  treeable_id: number;
  collection: TerrafundTreeSpeciesBulkPartial[];
};

export type TerrafundTreeSpeciesBulkPartial = {
  name: string;
  amount: number;
};

export type TerrafundNoneTreeSpeciesRead = {
  name?: string;
  amount?: number;
  speciesable_type: "programme" | "nursery";
  speciesable_id: number;
};

export type TerrafundNoneTreeSpeciesCreate = {
  name?: string;
  amount?: number;
  speciesable_type: "programme" | "nursery";
  speciesable_id: number;
};

export type TerrafundCsvCreate = {
  upload_id?: number;
  treeable_type?: string;
  treeable_id?: number;
};

export type TerrafundCsvRead = {
  id?: string;
  importable_type?: "programme";
  importable_id?: number;
  total_rows?: number;
  completed_rows?: number;
  has_failed?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundTreeSpeciesRead = {
  id?: string;
  treeable_type?: "programme";
  treeable_id?: number;
  name?: string;
  amount?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundFileCreate = {
  fileable_type?: "programme" | "nursery" | "site" | "nursery_submission" | "submission" | "site_submission";
  fileable_id?: number;
  upload?: number;
  is_public?: boolean;
  location_lat?: number;
  location_long?: number;
  collection?: string;
};

export type TerrafundFileRead = {
  id?: number;
  fileable_type?: string;
  fileable_id?: number;
  /**
   * @format uri
   */
  upload?: string;
  type?: string;
  is_public?: boolean;
  location_long?: number;
  location_lat?: number;
  collection?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundFileReadAll = TerrafundFileRead[];

export type TerrafundTreeSpeciesReadAll = TerrafundTreeSpeciesRead[];

export type TerrafundNoneTreeSpeciesReadAll = TerrafundNoneTreeSpeciesRead[];

export type TerrafundNurseryCreate = {
  name?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  terrafund_programme_id?: number;
  seedling_grown?: number;
  young_trees_grown?: number;
  planting_contribution?: string;
  nursery_type?: "managing" | "building" | "expanding";
};

export type TerrafundNurseryUpdate = {
  name?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  seedling_grown?: number;
  young_trees_grown?: number;
  planting_contribution?: string;
  nursery_type?: "managing" | "building" | "expanding";
};

export type TerrafundNurseryRead = {
  id?: string;
  name?: string;
  start_date?: string;
  end_date?: string;
  project_country?: string;
  boundary_geojson?: string;
  terrafund_programme_id?: number;
  seedling_grown?: number;
  young_trees_grown?: number;
  planting_contribution?: string;
  nursery_type?: string;
  photos?: TerrafundFileReadAll;
  tree_species?: TerrafundTreeSpeciesReadAll;
  submissions?: TerrafundNurserySubmissionRead[];
  next_due_submission_id?: number | null;
  /**
   * @format date-time
   */
  next_due_submission_due_at?: string | null;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundSiteCreate = {
  name?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  restoration_methods?: string[];
  terrafund_programme_id?: number;
  hectares_to_restore?: number;
  landscape_community_contribution?: string;
  disturbances?: string;
  land_tenures?: string[];
};

export type TerrafundSiteUpdate = {
  name?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  restoration_methods?: string[];
  hectares_to_restore?: number;
  landscape_community_contribution?: string;
  disturbances?: string;
  land_tenures?: string[];
};

export type SiteUpdate = {
  name?: string;
  description?: string;
  history?: string;
  control_site?: boolean;
  /**
   * @format date
   */
  end_date?: string;
  planting_pattern?: string;
  stratification_for_heterogeneity?: number;
};

export type ProgrammeUpdate = {
  name?: string;
  country?: string;
  continent?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  thumbnail?: number;
};

export type TerrafundSiteRead = {
  id?: string;
  name?: string;
  start_date?: string;
  end_date?: string;
  project_country?: string;
  boundary_geojson?: string;
  restoration_methods?: string[];
  land_tenures?: string[];
  terrafund_programme_id?: number;
  hectares_to_restore?: number;
  landscape_community_contribution?: string;
  disturbances?: string;
  photos?: TerrafundFileRead[];
  submissions?: TerrafundSiteSubmissionRead[];
  next_due_submission_id?: number | null;
  /**
   * @format date-time
   */
  next_due_submission_due_at?: string | null;
  baseline_monitoring?: SiteMetricRead;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundSiteReadAll = TerrafundSiteRead[];

export type OrganisationPhotoCreate = {
  upload?: number;
  is_public?: boolean;
  organisation_id?: number;
};

export type OrganisationPhotoRead = {
  id?: number;
  upload?: string;
  is_public?: boolean;
  organisation_id?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type OrganisationFileCreate = {
  upload?: number;
  type?: string;
  organisation_id?: number;
};

export type OrganisationFileRead = {
  id?: number;
  upload?: number;
  organisation_id?: number;
  type?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type OrganisationPhotoReadAll = OrganisationPhotoRead[];

export type OrganisationFileReadAll = OrganisationFileRead[];

export type TerrafundProgrammeInviteCreate = {
  email_address?: string;
};

export type TerrafundProgrammeInviteRead = {
  id?: number;
  email_address?: string;
  callback_url?: string;
  terrafund_programme_id?: number;
  /**
   * @format date-time
   */
  created_at?: string;
};

export type TerrafundProgrammeInviteAccept = {
  token?: string;
};

export type UserRoleUpdate = {
  role?: "user" | "terrafund_admin";
};

export type TerrafundNurserySubmissionCreate = {
  seedlings_young_trees?: number;
  interesting_facts?: string;
  site_prep?: string;
  shared_drive_link?: string;
  terrafund_nursery_id?: number;
};

export type TerrafundNurserySubmissionRead = {
  id?: number;
  seedlings_young_trees?: number;
  interesting_facts?: string;
  site_prep?: string;
  shared_drive_link?: string;
  terrafund_nursery_id?: number;
  created_at?: string;
  updated_at?: string;
};

export type TerrafundNurserySubmissionsReadAll = TerrafundNurserySubmissionRead[];

export type TerrafundNurserySubmissionUpdate = {
  title?: string;
  description?: string;
  seedlings_young_trees?: number;
  interesting_facts?: string;
  site_prep?: string;
};

export type TerrafundDueSubmissionRead = {
  id?: string;
  terrafund_due_submissionable_type?: string;
  terrafund_due_submissionable_id?: string;
  /**
   * This will be either a Terrafund Site or Terrafund Nursery
   */
  terrafund_due_submissionable?: Record<string, any>;
  drafts?: DraftReadAll;
  /**
   * @format date-time
   */
  due_at?: string;
  is_submitted?: boolean;
  /**
   * @format date-time
   */
  created_at?: string;
  unable_report_reason?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type TerrafundDueSubmissionReadAll = TerrafundDueSubmissionRead[];

export type TerrafundDisturbanceRead = {
  id?: string;
  disturbanceable_type?: string;
  disturbanceable_id?: number;
  type?: string;
  description?: string;
  created_at?: string;
  updated_at?: string;
};

export type TerrafundDisturbanceCreate = {
  disturbanceable_type?: string;
  disturbanceable_id?: string;
  type?: string;
  description?: string;
};

export type TerrafundSiteSubmissionCreate = {
  terrafund_site_id?: number;
  shared_drive_link?: string;
};

export type TerrafundSiteSubmissionRead = {
  id?: string;
  photos?: TerrafundFileReadAll;
  disturbances?: TerrafundDisturbanceReadAll;
  tree_species?: TerrafundTreeSpeciesReadAll;
  none_tree_species?: TerrafundNoneTreeSpeciesReadAll;
  shared_drive_link?: string;
  terrafund_site_id?: number;
  created_at?: string;
  updated_at?: string;
};

export type TerrafundSiteSubmissionsReadAll = TerrafundSiteSubmissionRead[];

export type TerrafundGenericSubmissionRead = {
  submissionable_id?: number;
  submissionable_type?: string;
  due_submissionable_id?: number;
  ["due_submissionable_name "]?: string;
  due_submissionable_type?: string;
  due_at?: string;
};

export type TerrafundGenericSubmissionsReadAll = TerrafundGenericSubmissionRead[];

export type TerrafundDisturbanceReadAll = TerrafundDisturbanceRead[];

export type TerrafundDueSubmissionUnableCreate = {
  reason?: string;
};

export type TerrafundLandTenureReadAll = TerrafundLandTenureRead[];

export type TerrafundRestorationMethodsReadAll = TerrafundRestorationMethodsRead[];

export type TerrafundProgrammeSubmissionCreate = {
  landscape_community_contribution?: string;
  top_three_successes?: string;
  maintenance_and_monitoring_activities?: string;
  significant_change?: string;
  terrafund_programme_id?: number;
  survival_calculation?: string;
  survival_comparison?: string;
  percentage_survival_to_date?: number;
  ft_women?: number;
  ft_men?: number;
  ft_youth?: number;
  ft_total?: number;
  pt_women?: number;
  pt_men?: number;
  pt_youth?: number;
  pt_total?: number;
  volunteer_men?: number;
  volunteer_women?: number;
  volunteer_youth?: number;
  volunteer_total?: number;
  people_annual_income_increased?: number;
  people_knowledge_skills_increased?: number;
  shared_drive_link?: string;
  challenges_faced?: string;
  lessons_learned?: string;
  planted_trees?: boolean;
  new_jobs_created?: number;
  new_jobs_description?: string;
  new_volunteers?: number;
  volunteers_work_description?: string;
  full_time_jobs_35plus?: number;
  part_time_jobs_35plus?: number;
  volunteer_35plus?: number;
  beneficiaries?: number;
  beneficiaries_description?: string;
  women_beneficiaries?: number;
  men_beneficiaries?: number;
  beneficiaries_35plus?: number;
  youth_beneficiaries?: number;
  smallholder_beneficiaries?: number;
  large_scale_beneficiaries?: number;
  beneficiaries_income_increase?: number;
  income_increase_description?: string;
  beneficiaries_skills_knowledge_increase?: string;
  skills_knowledge_description?: string;
};

export type TerrafundProgrammeSubmissionUpdate = {
  landscape_community_contribution?: string;
  top_three_successes?: string;
  maintenance_and_monitoring_activities?: string;
  significant_change?: string;
  terrafund_programme_id?: number;
  survival_calculation?: string;
  survival_comparison?: string;
  percentage_survival_to_date?: number;
  ft_women?: number;
  ft_men?: number;
  ft_youth?: number;
  ft_total?: number;
  pt_women?: number;
  pt_men?: number;
  pt_youth?: number;
  pt_total?: number;
  volunteer_women?: number;
  volunteer_men?: number;
  volunteer_youth?: number;
  volunteer_total?: number;
  people_annual_income_increased?: number;
  people_knowledge_skills_increased?: number;
  challenges_faced?: string;
  lessons_learned?: string;
  planted_trees?: boolean;
  new_jobs_created?: number;
  new_jobs_description?: string;
  new_volunteers?: number;
  volunteers_work_description?: string;
  full_time_jobs_35plus?: number;
  part_time_jobs_35plus?: number;
  volunteer_35plus?: number;
  beneficiaries?: number;
  beneficiaries_description?: string;
  women_beneficiaries?: number;
  men_beneficiaries?: number;
  beneficiaries_35plus?: number;
  youth_beneficiaries?: number;
  smallholder_beneficiaries?: number;
  large_scale_beneficiaries?: number;
  beneficiaries_income_increase?: number;
  income_increase_description?: string;
  beneficiaries_skills_knowledge_increase?: string;
  skills_knowledge_description?: string;
};

export type TerrafundProgrammeSubmissionRead = {
  id?: string;
  challenges_and_lessons?: string;
  lessons_learned?: string;
  planted_trees?: boolean;
  new_jobs_created?: number;
  new_jobs_description?: string;
  new_volunteers?: number;
  volunteers_work_description?: string;
  full_time_jobs_35plus?: number;
  part_time_jobs_35plus?: number;
  volunteer_35plus?: number;
  beneficiaries?: number;
  beneficiaries_description?: string;
  women_beneficiaries?: number;
  men_beneficiaries?: number;
  beneficiaries_35plus?: number;
  youth_beneficiaries?: number;
  smallholder_beneficiaries?: number;
  large_scale_beneficiaries?: number;
  beneficiaries_income_increase?: number;
  income_increase_description?: string;
  beneficiaries_skills_knowledge_increase?: string;
  skills_knowledge_description?: string;
  landscape_community_contribution?: string;
  top_three_successes?: string;
  maintenance_and_monitoring_activities?: string;
  significant_change?: string;
  terrafund_programme_id?: number;
  photos?: TerrafundFileReadAll;
  other_additional_documents?: TerrafundFileReadAll;
  survival_calculation?: string;
  survival_comparison?: string;
  percentage_survival_to_date?: number;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
  ft_women?: number;
  ft_men?: number;
  ft_youth?: number;
  ft_total?: number;
  pt_women?: number;
  pt_men?: number;
  pt_youth?: number;
  pt_total?: number;
  volunteer_women?: number;
  volunteer_men?: number;
  volunteer_youth?: number;
  volunteer_total?: number;
  people_annual_income_increased?: number;
  people_knowledge_skills_increased?: number;
  shared_drive_link?: string;
};

export type TerrafundProgrammeSubmissionsReadAll = TerrafundProgrammeSubmissionRead[];

export type TerrafundDateFilterCreate = {
  data?: {
    /**
     * @format date
     */
    start_date?: string;
    /**
     * @format date
     */
    end_date?: string;
  };
};

export type TerrafundFileCreateAll = TerrafundFileCreate[];

export type TerrafundLandTenureRead = {
  name?: string;
  key?: string;
};

export type TerrafundRestorationMethodsRead = {
  name?: string;
  key?: string;
};

export type TerrafundShapefileRead = {
  model?: string;
  model_id?: number;
  model_name?: string;
  boundary_geojson?: string;
};

export type TerrafundShapefileReadAll = void;

export type TerrafundDueSubmissionByProgrammeReadAll = {
  terrafund_programme_id?: number;
  ["terrafund_programme_name "]?: string;
  terrafund_programme_has_sites?: boolean;
  terrafund_programme_has_nurseries?: boolean;
  terrafund_last_submission_creation_date?: string | null;
  terrafund_next_submission_due_date?: string | null;
  terrafund_due_submissions?: TerrafundDueSubmissionReadAll;
}[];

export type TerrafundSiteSubmissionUpdate = {
  shared_drive_link?: string;
};

export type PPCSiteExport = {
  site_ids?: number[];
};

export type TerrafundDisturbanceUpdate = {
  type?: string;
  description?: string;
};

export type TerrafundAimsRead = {
  terrafund_programme_id?: number;
  trees_planted_goal?: number;
  trees_planted_count?: number;
  jobs_created_goal?: number;
  jobs_created_count?: number;
};

export type ProjectMetricCreate = {
  monitorable_type: string;
  monitorable_id: number;
  /**
   * @format float
   */
  total_hectares?: number;
  /**
   * @format float
   */
  ha_mangrove?: number;
  /**
   * @format float
   */
  ha_assisted?: number;
  /**
   * @format float
   */
  ha_agroforestry?: number;
  /**
   * @format float
   */
  ha_reforestation?: number;
  /**
   * @format float
   */
  ha_peatland?: number;
  /**
   * @format float
   */
  ha_riparian?: number;
  /**
   * @format float
   */
  ha_enrichment?: number;
  /**
   * @format float
   */
  ha_nucleation?: number;
  /**
   * @format float
   */
  ha_silvopasture?: number;
  /**
   * @format float
   */
  ha_direct?: number;
  /**
   * @format float
   */
  tree_count?: number;
  /**
   * @format float
   */
  tree_cover?: number;
  /**
   * @format float
   */
  tree_cover_loss?: number;
  /**
   * @format float
   */
  carbon_benefits?: number;
  /**
   * @format float
   */
  number_of_esrp?: number;
  /**
   * @format float
   */
  field_tree_count?: number;
  /**
   * @format float
   */
  field_tree_regenerated?: number;
  /**
   * @format float
   */
  field_tree_survival_percent?: number;
};

export type ProjectMetricUpdate = {
  uuid: string;
  /**
   * @format float
   */
  total_hectares?: number;
  /**
   * @format float
   */
  ha_mangrove?: number;
  /**
   * @format float
   */
  ha_assisted?: number;
  /**
   * @format float
   */
  ha_agroforestry?: number;
  /**
   * @format float
   */
  ha_reforestation?: number;
  /**
   * @format float
   */
  ha_peatland?: number;
  /**
   * @format float
   */
  ha_riparian?: number;
  /**
   * @format float
   */
  ha_enrichment?: number;
  /**
   * @format float
   */
  ha_nucleation?: number;
  /**
   * @format float
   */
  ha_silvopasture?: number;
  /**
   * @format float
   */
  ha_direct?: number;
  /**
   * @format float
   */
  tree_count?: number;
  /**
   * @format float
   */
  tree_cover?: number;
  /**
   * @format float
   */
  tree_cover_loss?: number;
  /**
   * @format float
   */
  carbon_benefits?: number;
  /**
   * @format float
   */
  number_of_esrp?: number;
  /**
   * @format float
   */
  field_tree_count?: number;
  /**
   * @format float
   */
  field_tree_regenerated?: number;
  /**
   * @format float
   */
  field_tree_survival_percent?: number;
};

export type ProjectMetricRead = {
  uuid?: string;
  /**
   * @format float
   */
  total_hectares?: number | null;
  /**
   * @format float
   */
  ha_mangrove?: number | null;
  /**
   * @format float
   */
  ha_assisted?: number | null;
  /**
   * @format float
   */
  ha_agroforestry?: number | null;
  /**
   * @format float
   */
  ha_reforestation?: number | null;
  /**
   * @format float
   */
  ha_peatland?: number | null;
  /**
   * @format float
   */
  ha_riparian?: number | null;
  /**
   * @format float
   */
  ha_enrichment?: number | null;
  /**
   * @format float
   */
  ha_nucleation?: number | null;
  /**
   * @format float
   */
  ha_silvopasture?: number | null;
  /**
   * @format float
   */
  ha_direct?: number | null;
  /**
   * @format float
   */
  tree_count?: number | null;
  /**
   * @format float
   */
  tree_cover?: number | null;
  /**
   * @format float
   */
  tree_cover_loss?: number | null;
  /**
   * @format float
   */
  carbon_benefits?: number | null;
  /**
   * @format float
   */
  number_of_esrp?: number | null;
  /**
   * @format float
   */
  field_tree_count?: number | null;
  /**
   * @format float
   */
  field_tree_regenerated?: number | null;
  /**
   * @format float
   */
  field_tree_survival_percent?: number | null;
  created_at?: string;
  updated_at?: string;
};

export type ProjectMetricReadAll = ProjectMetricRead[];

export type SiteMetricCreate = {
  monitorable_type: string;
  monitorable_id: number;
  tree_count?: number;
  tree_cover?: number;
  field_tree_count?: number;
};

export type SiteMetricUpdate = {
  uuid: string;
  tree_count?: number;
  tree_cover?: number;
  field_tree_count?: number;
};

export type SiteMetricRead = {
  uuid?: string;
  tree_count?: number | null;
  tree_cover?: number | null;
  field_tree_count?: number | null;
};

export type SiteMetricReadAll = SiteMetricRead[];

export type EditHistoryCreate = {
  editable_type: string;
  editable_id: number;
  content: string;
};

export type EditHistoryRead = {
  uuid?: string;
  status?: string;
  readable_status?: string;
  content?: string;
  organisation_name?: string;
  project_name?: string;
  framework_name?: string;
  model?: {
    id?: number;
    type?: string;
    name?: string;
  };
  created_at?: string;
  updated_at?: string;
};

export type Form = {
  title?: string;
  subtitle?: string;
  description?: string;
  deadline_at?: string;
  documentation?: string;
  documentation_label?: string;
  submission_message?: string;
  duration?: string;
  stage_id?: number;
  /**
   * this is a list of key value pairs eg. slug: name
   */
  tags?: string[];
};

export type FormCreate = {
  title?: string;
  subtitle?: string;
  description?: string;
  deadline_at?: string;
  documentation?: string;
  documentation_label?: string;
  submission_message?: string;
  duration?: string;
  stage_id?: number;
  /**
   * this is a list of key value pairs eg. slug: name
   */
  tags?: string[];
  form_sections?: FormSectionCreate[];
};

export type FormRead = {
  id?: number;
  uuid?: string;
  version?: number;
  title?: string;
  subtitle?: string;
  description?: string;
  duration?: string;
  deadline_at?: string;
  documentation?: string;
  documentation_label?: string;
  submission_message?: string;
  published?: boolean;
  stage_id?: string;
  form_sections?: FormSectionRead[];
  /**
   * this is a list of key value pairs eg. slug: name
   */
  tags?: string[];
  updated_by?: number;
  deleted_at?: string;
  created_at?: string;
  updated_at?: string;
};

export type FormSectionCreate = {
  order?: number;
  title?: string;
  subtitle?: string;
  description?: string;
  form_questions?: FormQuestionCreate[];
};

export type FormSectionRead = {
  order?: number;
  form_id?: number;
  form_questions?: FormQuestionRead[];
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type FormQuestionRead = {
  id?: number;
  uuid?: string;
  form_section_id?: number;
  parent_id?: string;
  linked_field_key?: string;
  children?: FormQuestionRead[];
  label?: string;
  validation?: string[];
  multichoice?: boolean;
  order?: number;
  options?: FormQuestionOptionRead[];
  table_headers?: FormTableHeaderRead[];
  additional_text?: string;
  additional_url?: string;
  input_type?: "date" | "text" | "long-text" | "select" | "checkboxes" | "radio" | "number" | "image" | "file";
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type FormQuestionCreate = {
  child_form_questions?: FormQuestionRead[];
  additional_props?: Record<string, any>[];
  table_headers?: FormTableHeaderRead[];
  linked_field_key?: string;
  input_type?: "date" | "text" | "long-text" | "select" | "checkboxes" | "radio" | "number" | "image" | "file";
  label?: string;
  placeholder?: string;
  description?: string;
  validation?: Record<string, any>;
  multichoice?: boolean;
  order?: number;
  options_list?: string;
  options?: FormQuestionOptionRead[];
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type FormSectionUpdate = {
  order?: number;
};

export type FormUpdate = {
  title?: string;
  subtitle?: string;
  description?: string;
  documentation?: string;
  documentation_label?: string;
  submission_message?: string;
  duration?: string;
};

export type V2PaginationLinks = {
  first?: string;
  last?: string;
  prev?: string;
  next?: string;
};

export type V2PaginationCurrentLinks = {
  url?: string;
  label?: string;
  active?: boolean;
};

export type V2PaginationMeta = {
  from?: number;
  to?: number;
  current_page?: number;
  last_page?: number;
  per_page?: number;
  total?: number;
  path?: string;
  links?: V2PaginationCurrentLinks[];
};

export type V2SearchFilterSort = {
  /**
   * search term to use on the collection
   */
  search?: string;
  /**
   * multiple filters can be applied. syntax is ?filter[foo]=value1,value2$filter[bar]=value3
   */
  filter?: string;
  /**
   * sorting can be applied, default is ascending or use - for descending. For Example ?sort=-name
   */
  sort?: string;
  /**
   * number of results (per page) to return
   */
  per_page?: number;
  /**
   * page number you want results from
   */
  page?: number;
};

export type V2AdminOrganisationRead = {
  uuid?: string;
  status?: string;
  readable_status?: string;
  type?: string;
  private?: boolean;
  name?: string;
  phone?: string;
  states?: string[];
  loan_status_types?: string[];
  land_systems?: string[];
  fund_utilisation?: string[];
  detailed_intervention_types?: string[];
  account_number_1?: string;
  account_number_2?: string;
  approach_of_marginalized_communities?: string;
  community_engagement_numbers_marginalized?: string;
  currency?: string;
  founding_date?: string;
  description?: string;
  countries?: string[];
  languages?: string[];
  tree_species?: V2TreeSpeciesRead[];
  project_pitches?: ProjectPitchRead[];
  web_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  linkedin_url?: string;
  twitter_url?: string;
  hq_street_1?: string;
  hq_street_2?: string;
  hq_city?: string;
  hq_state?: string;
  hq_zipcode?: string;
  hq_country?: string;
  fin_start_month?: number;
  /**
   * @format float
   */
  fin_budget_3year?: number;
  /**
   * @format float
   */
  fin_budget_2year?: number;
  /**
   * @format float
   */
  fin_budget_1year?: number;
  /**
   * @format float
   */
  fin_budget_current_year?: number;
  /**
   * @format float
   */
  ha_restored_total?: number;
  /**
   * @format float
   */
  ha_restored_3year?: number;
  relevant_experience_years?: number;
  trees_grown_total?: number;
  trees_grown_3year?: number;
  tree_care_approach?: string;
  ft_permanent_employees?: number;
  pt_permanent_employees?: number;
  temp_employees?: number;
  female_employees?: number;
  male_employees?: number;
  young_employees?: number;
  additional_funding_details?: string;
  community_experience?: string;
  total_engaged_community_members_3yr?: number;
  percent_engaged_women_3yr?: number;
  percent_engaged_men_3yr?: number;
  percent_engaged_under_35_3yr?: number;
  percent_engaged_over_35_3yr?: number;
  percent_engaged_smallholder_3yr?: number;
  total_trees_grown?: number;
  avg_tree_survival_rate?: number;
  tree_maintenance_aftercare_approach?: string;
  restored_areas_description?: string;
  monitoring_evaluation_experience?: string;
  funding_history?: string;
  engagement_farmers?: string[];
  engagement_women?: string[];
  engagement_youth?: string[];
  engagement_non_youth?: string[];
  tree_restoration_practices?: string[];
  business_model?: string;
  subtype?: string;
  organisation_revenue_this_year?: number;
  shapefiles?: ShapefileRead[];
  bank_statements?: V2FileRead[];
  previous_annual_reports?: V2FileRead[];
  logo?: V2FileRead;
  cover?: V2FileRead;
  reference?: V2FileRead[];
  additional?: V2FileRead[];
  op_budget_2year?: V2FileRead[];
  op_budget_last_year?: V2FileRead[];
  op_budget_this_year?: V2FileRead[];
  op_budget_next_year?: V2FileRead[];
  legal_registration?: V2FileRead[];
  /**
   * this is a list of key value pairs eg. slug: name
   */
  tags?: string[];
  created_at?: string;
  updated_at?: string;
};

export type V2MonitoringOrganisationRead = {
  uuid?: string;
  status?: string;
  users_status?: string;
  readable_status?: string;
  type?: string;
  private?: boolean;
  name?: string;
  phone?: string;
  founding_date?: string;
  description?: string;
  countries?: string[];
  languages?: string[];
  tree_species?: V2TreeSpeciesRead[];
  web_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  linkedin_url?: string;
  twitter_url?: string;
  hq_street_1?: string;
  hq_street_2?: string;
  hq_city?: string;
  hq_state?: string;
  hq_zipcode?: string;
  hq_country?: string;
  fin_start_month?: number;
  /**
   * @format float
   */
  fin_budget_3year?: number;
  /**
   * @format float
   */
  fin_budget_2year?: number;
  /**
   * @format float
   */
  fin_budget_1year?: number;
  /**
   * @format float
   */
  fin_budget_current_year?: number;
  /**
   * @format float
   */
  ha_restored_total?: number;
  /**
   * @format float
   */
  ha_restored_3year?: number;
  relevant_experience_years?: number;
  trees_grown_total?: number;
  trees_grown_3year?: number;
  tree_care_approach?: string;
  logo?: V2FileRead;
  cover?: V2FileRead;
  reference?: V2FileRead[];
  additional?: V2FileRead[];
  op_budget_2year?: V2FileRead[];
  op_budget_last_year?: V2FileRead[];
  op_budget_this_year?: V2FileRead[];
  op_budget_next_year?: V2FileRead[];
  legal_registration?: V2FileRead[];
  /**
   * this is a list of key value pairs eg. slug: name
   */
  tags?: string[];
  created_at?: string;
  updated_at?: string;
};

export type V2AdminOrganisationUpdate = {
  type?: string;
  private?: boolean;
  name?: string;
  phone?: string;
  founding_date?: string;
  description?: string;
  countries?: string[];
  languages?: string[];
  tree_species?: V2TreeSpeciesRead[];
  web_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  linkedin_url?: string;
  twitter_url?: string;
  hq_street_1?: string;
  hq_street_2?: string;
  hq_city?: string;
  hq_state?: string;
  hq_zipcode?: string;
  hq_country?: string;
  fin_start_month?: number;
  /**
   * @format float
   */
  fin_budget_3year?: number;
  /**
   * @format float
   */
  fin_budget_2year?: number;
  /**
   * @format float
   */
  fin_budget_1year?: number;
  /**
   * @format float
   */
  fin_budget_current_year?: number;
  /**
   * @format float
   */
  ha_restored_total?: number;
  /**
   * @format float
   */
  ha_restored_3year?: number;
  relevant_experience_years?: number;
  trees_grown_total?: number;
  trees_grown_3year?: number;
  tree_care_approach?: string;
  ft_permanent_employees?: number;
  pt_permanent_employees?: number;
  temp_employees?: number;
  female_employees?: number;
  male_employees?: number;
  young_employees?: number;
  additional_funding_details?: string;
  community_experience?: string;
  total_engaged_community_members_3yr?: number;
  percent_engaged_women_3yr?: number;
  percent_engaged_men_3yr?: number;
  percent_engaged_under_35_3yr?: number;
  percent_engaged_over_35_3yr?: number;
  percent_engaged_smallholder_3yr?: number;
  total_trees_grown?: number;
  avg_tree_survival_rate?: number;
  tree_maintenance_aftercare_approach?: string;
  restored_areas_description?: string;
  monitoring_evaluation_experience?: string;
  funding_history?: string;
  engagement_farmers?: string[];
  engagement_women?: string[];
  engagement_youth?: string[];
  engagement_non_youth?: string[];
  tree_restoration_practices?: string[];
  business_model?: string;
  subtype?: string;
  organisation_revenue_this_year?: number;
  shapefiles?: ShapefileRead[];
  tags?: string[];
};

export type V2CommonOptions = {
  uuid?: string;
  slug?: string;
  alt_value?: string;
  label?: string;
};

export type V2GenericList = {
  uuid?: string;
  name?: string;
  input_type?: string;
  option_list_key?: string;
  options?: string[];
};

export type V2OrganisationApproveRejectUser = {
  organisation_uuid: string;
  user_uuid: string;
};

export type V2OrganisationUpdate = {
  /**
   * Available type are for-profit-organization, non-profit-organization, government-agency
   */
  type?: string;
  private?: boolean;
  name?: string;
  phone?: string;
  states?: string[];
  loan_status_types?: string[];
  land_systems?: string[];
  fund_utilisation?: string[];
  detailed_intervention_types?: string[];
  account_number_1?: string;
  account_number_2?: string;
  approach_of_marginalized_communities?: string;
  community_engagement_numbers_marginalized?: string;
  currency?: string;
  founding_date?: string;
  description?: string;
  countries?: string[];
  engagement_farmers?: string[];
  engagement_women?: string[];
  engagement_youth?: string[];
  engagement_non_youth?: string[];
  tree_restoration_practices?: string[];
  business_model?: string;
  subtype?: string;
  organisation_revenue_this_year?: number;
  languages?: string[];
  web_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  linkedin_url?: string;
  twitter_url?: string;
  hq_street_1?: string;
  hq_street_2?: string;
  hq_city?: string;
  hq_state?: string;
  hq_zipcode?: string;
  hq_country?: string;
  fin_start_month?: number;
  /**
   * @format float
   */
  fin_budget_3year?: number;
  /**
   * @format float
   */
  fin_budget_2year?: number;
  /**
   * @format float
   */
  fin_budget_1year?: number;
  /**
   * @format float
   */
  fin_budget_current_year?: number;
  /**
   * @format float
   */
  ha_restored_total?: number;
  /**
   * @format float
   */
  ha_restored_3year?: number;
  relevant_experience_years?: number;
  trees_grown_total?: number;
  trees_grown_3year?: number;
  tree_care_approach?: string;
  ft_permanent_employees?: number;
  pt_permanent_employees?: number;
  temp_employees?: number;
  female_employees?: number;
  male_employees?: number;
  young_employees?: number;
  additional_funding_details?: string;
  community_experience?: string;
  total_engaged_community_members_3yr?: number;
  percent_engaged_women_3yr?: number;
  percent_engaged_men_3yr?: number;
  percent_engaged_under_35_3yr?: number;
  percent_engaged_over_35_3yr?: number;
  percent_engaged_smallholder_3yr?: number;
  total_trees_grown?: number;
  avg_tree_survival_rate?: number;
  tree_maintenance_aftercare_approach?: string;
  restored_areas_description?: string;
  monitoring_evaluation_experience?: string;
  funding_history?: string;
  shapefiles?: ShapefileRead[];
  tags?: string[];
};

export type V2OrganisationRead = {
  uuid?: string;
  type?: string;
  private?: boolean;
  name?: string;
  phone?: string;
  states?: string[];
  loan_status_types?: string[];
  land_systems?: string[];
  fund_utilisation?: string[];
  detailed_intervention_types?: string[];
  account_number_1?: string;
  account_number_2?: string;
  approach_of_marginalized_communities?: string;
  community_engagement_numbers_marginalized?: string;
  currency?: string;
  founding_date?: string;
  description?: string;
  countries?: string[];
  languages?: string[];
  project_pitches?: ProjectPitchRead[];
  tree_species?: V2TreeSpeciesRead[];
  web_url?: string;
  facebook_url?: string;
  instagram_url?: string;
  linkedin_url?: string;
  twitter_url?: string;
  hq_street_1?: string;
  hq_street_2?: string;
  hq_city?: string;
  hq_state?: string;
  hq_zipcode?: string;
  hq_country?: string;
  fin_start_month?: number;
  /**
   * @format float
   */
  fin_budget_3year?: number;
  /**
   * @format float
   */
  fin_budget_2year?: number;
  /**
   * @format float
   */
  fin_budget_1year?: number;
  /**
   * @format float
   */
  fin_budget_current_year?: number;
  /**
   * @format float
   */
  ha_restored_total?: number;
  /**
   * @format float
   */
  ha_restored_3year?: number;
  relevant_experience_years?: number;
  trees_grown_total?: number;
  trees_grown_3year?: number;
  tree_care_approach?: string;
  ft_permanent_employees?: number;
  pt_permanent_employees?: number;
  temp_employees?: number;
  female_employees?: number;
  male_employees?: number;
  young_employees?: number;
  additional_funding_details?: string;
  community_experience?: string;
  total_engaged_community_members_3yr?: number;
  percent_engaged_women_3yr?: number;
  percent_engaged_men_3yr?: number;
  percent_engaged_under_35_3yr?: number;
  percent_engaged_over_35_3yr?: number;
  percent_engaged_smallholder_3yr?: number;
  total_trees_grown?: number;
  avg_tree_survival_rate?: number;
  tree_maintenance_aftercare_approach?: string;
  restored_areas_description?: string;
  monitoring_evaluation_experience?: string;
  funding_history?: string;
  engagement_farmers?: string[];
  engagement_women?: string[];
  engagement_youth?: string[];
  engagement_non_youth?: string[];
  tree_restoration_practices?: string[];
  business_model?: string;
  subtype?: string;
  organisation_revenue_this_year?: number;
  shapefiles?: ShapefileRead[];
  bank_statements?: V2FileRead[];
  previous_annual_reports?: V2FileRead[];
  logo?: V2FileRead;
  cover?: V2FileRead;
  reference?: V2FileRead[];
  additional?: V2FileRead[];
  op_budget_2year?: V2FileRead[];
  op_budget_last_year?: V2FileRead[];
  op_budget_this_year?: V2FileRead[];
  op_budget_next_year?: V2FileRead[];
  legal_registration?: V2FileRead[];
  /**
   * this is a list of key value pairs eg slug: name
   */
  tags?: string[];
};

export type ShapefileRead = {
  uuid?: string;
  shapefileable_type?: string;
  shapefileable_id?: number;
  geojson?: string;
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type V2AdminUserRead = {
  uuid?: string;
  status?: string;
  readable_status?: string;
  type?: string;
  first_name?: string;
  last_name?: string;
  email_address?: string;
  job_role?: string;
  facebook?: string;
  instagram?: string;
  linkedin?: string;
  twitter?: string;
  whatsapp_phone?: string;
  date_added?: string;
};

export type V2AdminUserUpdate = {
  type?: string;
  first_name?: string;
  last_name?: string;
  email_address?: string;
  password?: string;
  job_role?: string;
  facebook?: string;
  instagram?: string;
  linkedin?: string;
  twitter?: string;
  whatsapp_phone?: string;
  organisation?: string;
  monitoring_organisations?: V2MonitoringOrganisationRead[];
};

export type V2FileRead = {
  uuid?: string;
  url?: string;
  collection_name?: string;
  title?: string;
  file_name?: string;
  mime_type?: string;
  size?: number;
  created_at?: string;
};

export type V2TreeSpeciesCreate = {
  model_type?: string;
  model_uuid?: number;
  name?: string;
  amount?: number;
};

export type V2TreeSpeciesRead = {
  id?: number;
  uuid?: string;
  name?: string;
  amount?: number;
};

export type V2TreeSpeciesUpdate = {
  name?: string;
  amount?: number;
};

export type V2CoreTeamLeaderCreate = {
  organisation_id?: string;
  position?: string;
  gender?: string;
  first_name?: string;
  last_name?: string;
  role?: string;
  age?: number;
};

export type V2CoreTeamLeaderRead = {
  uuid?: string;
  organisation_id?: string;
  position?: string;
  gender?: string;
  first_name?: string;
  last_name?: string;
  role?: string;
  age?: number;
};

export type V2CoreTeamLeaderUpdate = {
  position?: string;
  gender?: string;
  first_name?: string;
  last_name?: string;
  role?: string;
  age?: number;
};

export type V2LeadershipTeamCreate = {
  organisation_id?: string;
  first_name?: string;
  last_name?: string;
  position?: string;
  gender?: string;
  age?: number;
};

export type V2LeadershipTeamRead = {
  uuid?: string;
  organisation_id?: string;
  first_name?: string;
  last_name?: string;
  position?: string;
  gender?: string;
  age?: number;
};

export type V2LeadershipTeamUpdate = {
  position?: string;
  gender?: string;
  age?: number;
};

export type V2FundingTypeCreate = {
  organisation_id?: string;
  source?: string;
  amount?: number;
  year?: number;
  type?: string;
};

export type V2FundingTypeRead = {
  uuid?: string;
  organisation_id?: string;
  source?: string;
  amount?: number;
  year?: number;
  type?: string;
};

export type V2FundingTypeUpdate = {
  source?: string;
  amount?: number;
  year?: number;
  type?: string;
};

export type ProjectPitchCreate = {
  organisation_id?: string;
  project_name?: string;
  project_objectives?: string;
  how_discovered?: string;
  project_country?: string[];
  project_county_district?: string;
  land_systems?: string[];
  tree_restoration_practices?: string[];
  restoration_intervention_types?: string[];
  capacity_building_needs?: string[];
  total_trees?: number;
  total_hectares?: number;
  project_budget?: number;
  expected_active_restoration_start_date?: string;
  expected_active_restoration_end_date?: string;
  description_of_project_timeline?: string;
  proj_partner_info?: string;
  land_tenure_proj_area?: string[];
  landholder_comm_engage?: string;
  proj_success_risks?: string;
  monitor_eval_plan?: string;
  proj_boundary?: string;
  sustainable_dev_goals?: string[];
  proj_area_description?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_sites?: number;
  environmental_goals?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_nurseries?: number;
  curr_land_degradation?: string;
  proj_impact_socieconom?: string;
  proj_impact_foodsec?: string;
  proj_impact_watersec?: string;
  proj_impact_jobtypes?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  num_jobs_created?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_men?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_18to35?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_older35?: number;
  proj_beneficiaries?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_small?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_large?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_youth?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_classes?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_tribes?: number;
  monitoring_evaluation_plan?: string;
  main_degradation_causes?: string;
  seedlings_source?: string;
};

export type ProjectPitchUpdate = {
  funding_programme_id?: number;
  project_name?: string;
  project_objectives?: string;
  project_county_district?: string;
  how_discovered?: string;
  project_budget?: number;
  project_country?: string[];
  land_systems?: string[];
  tree_restoration_practices?: string[];
  restoration_intervention_types?: string[];
  capacity_building_needs?: string[];
  total_hectares?: number;
  total_trees?: number;
  expected_active_restoration_start_date?: string;
  expected_active_restoration_end_date?: string;
  description_of_project_timeline?: string;
  proj_partner_info?: string;
  land_tenure_proj_area?: string[];
  landholder_comm_engage?: string;
  proj_success_risks?: string;
  monitor_eval_plan?: string;
  proj_boundary?: string;
  sustainable_dev_goals?: string[];
  proj_area_description?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_sites?: number;
  environmental_goals?: string;
  main_degradation_causes?: string;
  seedlings_source?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_nurseries?: number;
  curr_land_degradation?: string;
  proj_impact_socieconom?: string;
  proj_impact_foodsec?: string;
  proj_impact_watersec?: string;
  proj_impact_jobtypes?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  num_jobs_created?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_men?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_18to35?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_older35?: number;
  proj_beneficiaries?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_small?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_large?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_youth?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_classes?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_tribes?: number;
  monitoring_evaluation_plan?: string;
};

export type V2SiteRead = {
  id?: number;
  site_id?: number;
  terrafund_site_id?: number;
  programme_id?: number;
  terrafund_programme_id?: number;
  control_site?: boolean;
  name?: string;
  country?: string;
  project_country?: string;
  continent?: string;
  description?: string;
  planting_pattern?: string;
  stratification_for_heterogeneity?: string;
  history?: string;
  workdays_paid?: number;
  workdays_volunteer?: number;
  total_workdays?: number;
  /**
   * @format date
   */
  establishment_date?: string;
  /**
   * @format date
   */
  start_date?: string;
  /**
   * @format date
   */
  end_date?: string;
  technical_narrative?: string;
  public_narrative?: string;
  aim_survival_rate?: number;
  aim_year_five_crown_cover?: number;
  aim_direct_seeding_survival_rate?: number;
  aim_natural_regeneration_trees_per_hectare?: number;
  aim_natural_regeneration_hectares?: number;
  aim_soil_condition?: string;
  aim_number_of_mature_trees?: number;
  hectares_to_restore?: number;
  landscape_community_contribution?: string;
  disturbances?: string;
  boundary_geojson?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ProjectPitchRead = {
  id?: string;
  uuid?: string;
  status?: string;
  readable_status?: string;
  organisation_id?: string;
  funding_programmes?: LimitedFundingProgrammeRead;
  tree_species?: V2TreeSpeciesRead[];
  project_name?: string;
  how_discovered?: string;
  project_objectives?: string;
  project_country?: string[];
  land_systems?: string[];
  project_county_district?: string;
  restoration_intervention_types?: string[];
  total_hectares?: number;
  project_budget?: number;
  total_trees?: number;
  capacity_building_needs?: string[];
  main_degradation_causes?: string;
  seedlings_source?: string;
  additional?: V2FileRead[];
  restoration_photos?: V2FileRead[];
  cover?: V2FileRead;
  proof_of_land_tenure_mou?: V2FileRead[];
  detailed_project_budget?: V2FileRead;
  expected_active_restoration_start_date?: string;
  expected_active_restoration_end_date?: string;
  description_of_project_timeline?: string;
  proj_partner_info?: string;
  land_tenure_proj_area?: string[];
  landholder_comm_engage?: string;
  proj_success_risks?: string;
  monitor_eval_plan?: string;
  proj_boundary?: string;
  sustainable_dev_goals?: string[];
  proj_area_description?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_sites?: number;
  environmental_goals?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  proposed_num_nurseries?: number;
  curr_land_degradation?: string;
  proj_impact_socieconom?: string;
  proj_impact_foodsec?: string;
  proj_impact_watersec?: string;
  proj_impact_jobtypes?: string;
  /**
   * @minimum 0
   * @maximum 4294967295
   */
  num_jobs_created?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_men?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_18to35?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_employees_older35?: number;
  proj_beneficiaries?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_women?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_small?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_large?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_youth?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_classes?: number;
  /**
   * @minimum 0
   * @maximum 100
   */
  pct_beneficiaries_scheduled_tribes?: number;
  monitoring_evaluation_plan?: string;
  deleted_at?: string;
  created_at?: string;
  updated_at?: string;
};

export type AuditRead = {
  event?: string;
  user_id?: number;
  old_values?: Record<string, any>;
  new_values?: Record<string, any>;
  created_at?: string;
  updated_at?: string;
};

export type FormSubmissionRead = {
  id?: string;
  uuid?: string;
  name?: string;
  audits?: AuditRead[];
  form?: FormRead;
  stage?: StageLiteRead;
  answers?: string;
  status?: string;
  readable_status?: string;
  feedback?: string;
  feedback_fields?: string[];
  next_stage_uuid?: string;
  previous_stage_uuid?: string;
  /**
   * this is a list of key value pairs eg slug: name
   */
  tags?: string[];
  updated_by?: string;
  deleted_at?: string;
  created_at?: string;
  updated_at?: string;
};

export type StageRead = {
  id?: number;
  uuid?: string;
  name?: string;
  deadline_at?: string;
  status?: string;
  readable_status?: string;
  funding_programme_id?: number;
  order?: number;
  forms?: FormRead;
  deleted_at?: string;
  created_at?: string;
  updated_at?: string;
};

export type StageLiteRead = {
  uuid?: string;
  name?: string;
  status?: string;
  readable_status?: string;
};

export type StageCreate = {
  name?: string;
  funding_programme_id?: number;
  form_id?: string;
  order?: number;
  deadline_at?: string;
};

export type FormQuestionOptionRead = {
  id?: number;
  uuid?: string;
  form_question_id?: number;
  label?: string;
  order?: number;
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type FormTableHeaderRead = {
  id?: number;
  uuid?: string;
  form_question_id?: number;
  label?: string;
  order?: number;
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
};

export type FormSubmissionCreate = {
  form_uuid?: string;
  project_pitch_uuid?: string;
};

export type FormSubmissionUpdate = {
  status?: string;
  answers?: {
    question_id?: number;
    value?: string;
    options?: string[];
  }[];
};

export type FormSubmissionLiteRead = {
  uuid?: string;
  name?: string;
  status?: string;
  readable_status?: number;
  audits?: AuditRead[];
  form_uuid?: string;
  created_at?: string;
  updated_at?: string;
  stage?: {
    uuid?: string;
    name?: string;
    order?: number;
  };
};

export type ApplicationLiteRead = {
  uuid?: string;
  form_submissions?: FormSubmissionLiteRead[];
  current_submission?: FormSubmissionLiteRead;
  funding_programme_name?: number;
  funding_programme_uuid?: string;
  funding_programme_status?: string;
  organisation_name?: string;
  organisation_uuid?: string;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};

export type ApplicationRead = {
  uuid?: string;
  form_submissions?: FormSubmissionRead[];
  current_submission?: FormSubmissionRead;
  funding_programme?: FundingProgramme;
  organisation?: V2AdminOrganisationRead;
  /**
   * @format date-time
   */
  created_at?: string;
  /**
   * @format date-time
   */
  updated_at?: string;
};
