/**
 * Generated by @openapi-codegen
 *
 * @version 1.0
 */
import type * as Fetcher from "./userServiceFetcher";
import { userServiceFetch } from "./userServiceFetcher";
import type * as Schemas from "./userServiceSchemas";

export type AuthControllerLoginError = Fetcher.ErrorWrapper<{
  status: 401;
  payload: {
    /**
     * @example 401
     */
    statusCode: number;
    /**
     * @example Unauthorized
     */
    message: string;
  };
}>;

export type AuthControllerLoginResponse = {
  data?: Schemas.LoginResponse;
};

export type AuthControllerLoginVariables = {
  body: Schemas.LoginRequest;
};

export const authControllerLogin = (variables: AuthControllerLoginVariables, signal?: AbortSignal) =>
  userServiceFetch<AuthControllerLoginResponse, AuthControllerLoginError, Schemas.LoginRequest, {}, {}, {}>({
    url: "/auth/v3/logins",
    method: "post",
    ...variables,
    signal
  });
