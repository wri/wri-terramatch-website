/**
 * Generated by @openapi-codegen
 *
 * @version 1.0
 */
import type * as Fetcher from "./dashboardServiceFetcher";
import { dashboardServiceFetch } from "./dashboardServiceFetcher";
import type * as Schemas from "./dashboardServiceSchemas";

export type GetTotalSectionHeadersQueryParams = {
  country?: string;
  /**
   * Filter results by programmes
   */
  programmes?: string[];
  cohort?: string;
  /**
   * Filter results by landscapes
   */
  landscapes?: string[];
  /**
   * Filter results by organisationType
   */
  organisationType?: string[];
  projectUuid?: string;
};

export type GetTotalSectionHeadersError = Fetcher.ErrorWrapper<undefined>;

export type GetTotalSectionHeadersVariables = {
  queryParams?: GetTotalSectionHeadersQueryParams;
};

export const getTotalSectionHeaders = (variables: GetTotalSectionHeadersVariables, signal?: AbortSignal) =>
  dashboardServiceFetch<
    | {
        meta?: {
          /**
           * @example totalSectionHeaders
           */
          resourceType?: string;
        };
        data?: {
          /**
           * @example totalSectionHeaders
           */
          type?: string;
          /**
           * @format uuid
           */
          id?: string;
          attributes?: Schemas.TotalSectionHeaderDto;
        };
      }
    | {
        meta?: {
          /**
           * @example delayedJobs
           */
          resourceType?: string;
        };
        data?: {
          /**
           * @example delayedJobs
           */
          type?: string;
          /**
           * @format uuid
           */
          id?: string;
          attributes?: Schemas.DelayedJobDto;
        };
      },
    GetTotalSectionHeadersError,
    undefined,
    {},
    GetTotalSectionHeadersQueryParams,
    {}
  >({ url: "/dashboard/v3/totalSectionHeaders", method: "get", ...variables, signal });

export const operationsByTag = { totalSectionHeader: { getTotalSectionHeaders } };
